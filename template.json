{
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "17c463da-fc0c-41c2-a502-11741019655f",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        1780,
        3380
      ],
      "credentials": {
        "openAiApi": {
          "id": "N0uSe42ux49uqSfq",
          "name": "JAPI OPENAI"
        }
      }
    },
    {
      "parameters": {
        "jsonMode": "expressionData",
        "jsonData": "={{ $json.data || $json.text || $json.concatenated_data }}",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "=file_id",
                "value": "={{ $('Set File ID').first().json.file_id }}"
              }
            ]
          }
        }
      },
      "id": "9c572524-2033-48ae-9f71-fb47987482e1",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        -2540,
        4900
      ],
      "disabled": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "6b7ecaf3-a702-4b62-a5f5-8bc5e0fd67f8",
      "name": "Embeddings OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        -2620,
        4960
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "3f1c635e-931b-4851-a80e-db0988779471",
      "name": "Download File",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -3440,
        4680
      ],
      "executeOnce": true,
      "disabled": true
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "hour": 5
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1urz7y2mxzYzHUE4yE5bTyAYlNWrgc14N",
          "mode": "list",
          "cachedResultName": "D: PROSPEC TERAPEUTA",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1urz7y2mxzYzHUE4yE5bTyAYlNWrgc14N"
        },
        "event": "fileCreated",
        "options": {}
      },
      "id": "bf0eebcf-0fb9-4da1-95da-f8b4f57dcd8e",
      "name": "File Created",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -4340,
        4620
      ],
      "disabled": true
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "hour": 4
            }
          ]
        },
        "triggerOn": "specificFolder",
        "folderToWatch": {
          "__rl": true,
          "value": "1urz7y2mxzYzHUE4yE5bTyAYlNWrgc14N",
          "mode": "list",
          "cachedResultName": "D: PROSPEC TERAPEUTA",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1urz7y2mxzYzHUE4yE5bTyAYlNWrgc14N"
        },
        "event": "fileUpdated",
        "options": {}
      },
      "id": "9562c876-0662-4510-820c-6c4a8ca37929",
      "name": "File Updated",
      "type": "n8n-nodes-base.googleDriveTrigger",
      "typeVersion": 1,
      "position": [
        -4340,
        4820
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "id": "3cb4b570-220b-478f-921f-1629865e2f08",
      "name": "Extract Document Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3020,
        4880
      ],
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "99eee786-05c6-44c4-8a8f-ad2c94ac91f3",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        1500,
        3500
      ],
      "credentials": {
        "openAiApi": {
          "id": "N0uSe42ux49uqSfq",
          "name": "JAPI OPENAI"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "10646eae-ae46-4327-a4dc-9987c2d76173",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "f4536df5-d0b1-4392-bf17-b8137fb31a44",
              "name": "file_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "c774ed34-0d67-44b7-a537-83810f357b7c",
              "name": "originalFilename",
              "value": "={{ $json.originalFilename }}",
              "type": "string"
            },
            {
              "id": "dff39c85-b4a2-45ba-a5ff-f4b311999efc",
              "name": "sha1Checksum",
              "value": "={{ $json.sha1Checksum }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6786490f-b605-4f32-a2b2-8ada346e1661",
      "name": "Set File ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4160,
        4660
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "5c87f414-e4e4-4063-8c16-5064c26d903b",
      "name": "Extract PDF Text",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3020,
        4500
      ],
      "disabled": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "id": "53022aee-1ed2-41ac-b315-dc493999b200",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -2880,
        4680
      ],
      "disabled": true
    },
    {
      "parameters": {},
      "id": "b469b678-22ad-42dc-9a0e-2ccf20327765",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        -2400,
        5000
      ],
      "disabled": true
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "id": "b071baef-5174-4cac-a879-a9c01494b6d4",
      "name": "Summarize",
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1,
      "position": [
        -2740,
        4680
      ],
      "disabled": true
    },
    {
      "parameters": {
        "mode": "insert",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "bf77f140-c538-484f-b3bd-cc0060c03d6f",
      "name": "Insert into Supabase Vectorstore",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        -2560,
        4680
      ],
      "disabled": true
    },
    {
      "parameters": {
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "options": {
          "queryName": "match_documents"
        }
      },
      "id": "f48e0230-a74d-44e6-a7b5-4a73f8c6ced8",
      "name": "Supabase Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1,
      "position": [
        1480,
        3380
      ],
      "credentials": {
        "supabaseApi": {
          "id": "pty9NpvC0CxgfQaB",
          "name": "JAPI SUPA ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "6c115582-0cae-49bd-880e-bd73988b6d33",
      "name": "Extract from Excel",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -3020,
        4680
      ],
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Arquivos criados em uma pasta específica > Verificar o tipo de arquivo e realizar conversão > Extrair o texto > Adicionar ao Vector Store",
        "height": 80,
        "width": 1600,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4400,
        5080
      ],
      "typeVersion": 1,
      "id": "1d6802e8-bac8-4ac8-a02a-a9432b8cfb8b",
      "name": "Sticky Note12",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Gatilho de Monitoramento",
        "height": 480,
        "width": 213,
        "color": 5
      },
      "id": "f0ee45e4-b35b-46d9-ad4d-a174f630d6b6",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4380,
        4520
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "60b8166b-e2e2-4ee8-941d-139ab3d33d13",
      "name": "OpenAI3",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2040,
        3080
      ],
      "credentials": {
        "openAiApi": {
          "id": "N0uSe42ux49uqSfq",
          "name": "JAPI OPENAI"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "43c87d6d-d9e8-4cdf-92ef-bc5861112d51",
      "name": "Loop Over Items3",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2460,
        2920
      ]
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"messages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"messages\"]\n}"
      },
      "id": "bdcf3fb0-c1af-4f6c-a86d-7f3669cbcd5a",
      "name": "OutputParser1",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        2160,
        3080
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Whatsapp message to be splitted and formated: {{ $json.output }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "message": "=Por favor, gere a saída no seguinte formato JSON:\n{\n  \"messages\": [\n    \"splitedMessage\",\n    \"splitedMessage\",\n    \"splitedMessage\"\n  ]\n}\n\nAs mensagens devem ser divididas de forma natural, afinal estamos conversando com um humano, não é mesmo?\n\nCertifique-se de que a resposta siga exatamente essa estrutura, incluindo os colchetes e as aspas.\n\n### Jamais separe uma mensagem vazia.\n\n### Divida em no máximo 4 mensagens.\n\n### Sempre que tiver um link envie ele de forma separada sem alteração\n\n### Certifique-se de que a resposta siga exatamente essa estrutura abaixo, deixando somente entre '*' para negrito e nunca fugindo das demais regras de markdown do whatsapp:\n\t\t\t- *negrito* (substitua '**' por '*')\n\t\t\t- ~tachado~ (caso seja algo que foi excluído ou alterado)\n\t\t\t- _itálico_.(extremamente raro)\n            - `link` (usar sempre em todos os links)"
            }
          ]
        }
      },
      "id": "a6ffccec-13c0-4394-9c2e-d67ba87377e2",
      "name": "Parser  Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.4,
      "position": [
        2000,
        2920
      ]
    },
    {
      "parameters": {
        "content": "# Divisão de Mensagens Inteligente - Texto",
        "height": 120,
        "width": 736,
        "color": 5
      },
      "id": "127ac1dc-a2f3-4443-bfca-2b28483d6fc6",
      "name": "Sticky Note19",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1800,
        2660
      ]
    },
    {
      "parameters": {
        "content": "# Gera/Consulta sessionId",
        "height": 460,
        "width": 596,
        "color": 5
      },
      "id": "1e8766a8-fc7c-4fdf-8262-4daaa92ff7ad",
      "name": "Sticky Note23",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2520,
        2800
      ]
    },
    {
      "parameters": {
        "content": "# Dados",
        "height": 80,
        "width": 150,
        "color": 5
      },
      "id": "b03a6aa0-f37e-4d37-8f12-e70131e41de5",
      "name": "Sticky Note43",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3120,
        2820
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        2100,
        2420
      ],
      "id": "993e6ad8-07ee-49fc-aae6-8c0c34821f18",
      "name": "Merge1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "defac08a-6745-422b-bb05-90da9f47d91b",
              "leftValue": "={{ $('Busca Telefone').last().json.values() }}",
              "rightValue": "",
              "operator": {
                "type": "array",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1640,
        2380
      ],
      "id": "ecf761b7-0e56-406b-a663-57bb209fac36",
      "name": "If4"
    },
    {
      "parameters": {
        "content": "# Cadastra Chat Supabase",
        "height": 100,
        "width": 450,
        "color": 5
      },
      "id": "d5af38ed-629a-476b-b447-3e4d7a284bb1",
      "name": "Sticky Note55",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1020,
        2240
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "app",
              "condition": "eq",
              "keyValue": "lia"
            },
            {
              "keyName": "updated_at",
              "condition": "gt",
              "keyValue": "={{ $now.plus(5,'minutes') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4220,
        3660
      ],
      "id": "41d471d2-1002-428e-a587-efe1e5ccf473",
      "name": "ListChats-Supabase",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $json.phone }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -3820,
        3680
      ],
      "id": "71585ca6-808e-4a2f-868f-02adcb763607",
      "name": "ListMessages-Supabase",
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chat_messages",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Aggregate1')?.item?.json?.conversas?.last()?.phone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "active",
              "fieldValue": "false"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2420,
        3780
      ],
      "id": "5b5b1827-2c1e-4291-83bc-59fce26a8395",
      "name": "DisableMessage-Supabase",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c9c00627-84a9-49a9-bc7e-d923a5918346",
              "name": "output",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "0e34f673-b6dc-4748-89d2-a178dfe91853",
              "name": "phone",
              "value": "={{ $('Aggregate1').item.json.conversas.last().phone }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2700,
        3480
      ],
      "id": "a49ccc8b-df93-4b9c-8598-4df9999f9455",
      "name": "SetConfig",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# Você é um agente facilitador de vendas e está buscando conversas não finalizadas entre o cliente e um agent de IA. \n\n# Cria a responda apenas a resposta não precisa justificar sua resposta\n\n# Identifique o cliente não enviou mais mensagens de resposta\n\n# Se o cliente não responder mesmo assim, agradeça e diga que irá encerrar o pedido e está a disposição para outros pedidos\n\n# Use frase simples e naturais como nos exemplos\n\nExemplos : \n - 'Oi .. ainda está ai'\n - 'E ai ? vamos finalizar o pedido?' \n\n# Conversa entre o cliete e o agente de IA:\n{{ $json.texto }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        -3020,
        3480
      ],
      "id": "cdbba02c-c22b-49a7-a429-ba3ba21821e4",
      "name": "Basic LLM Chain",
      "disabled": true
    },
    {
      "parameters": {
        "inputText": "={{ $json.texto }}",
        "categories": {
          "categories": [
            {
              "category": "pendente_resposta",
              "description": "A conversa está pendente devido a uma informação que o cliente ficou de fornecer ou confirmar, ou está pendende de marcar a reunião"
            },
            {
              "category": "encerrada",
              "description": "Houve um desfecho da conversa  ouagendamento de uma reuniãoe o agente de IA se despediu"
            },
            {
              "category": "sem_resposta",
              "description": "=Se o cliente não respondeu mais as mensagens do agente - mensagem do cliente vazia"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1,
      "position": [
        -3340,
        3680
      ],
      "id": "4839503e-9ea1-484b-8ac1-431301e0b23d",
      "name": "Text Classifier",
      "disabled": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone, conversation_id",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -3660,
        3680
      ],
      "id": "84ba97f7-2b97-46a1-90b2-078d3452ecf9",
      "name": "Aggregate1",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate1').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela é um array\n  const conversas = item.json.conversas || []; // Garante que é pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' não é um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indisponível\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indisponível\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Função para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inválida\"; // Retorna se a data não for válida\n  }\n  \n  // Formata no padrão DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // Mês começa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3480,
        3680
      ],
      "id": "d595bf7e-365f-49ca-8ccb-b0c5162c93be",
      "name": "Code4",
      "disabled": true
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().phone }}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().phone }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('Aggregate1').item.json.conversas.last().message_type }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $json.text }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2700,
        3660
      ],
      "id": "70e5b7de-958f-45b8-8214-b2c4a62a96f6",
      "name": "Supabase2",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -4020,
        3660
      ],
      "id": "489c0e6f-cd09-4697-a886-6fb69c609156",
      "name": "Loop Over Items2",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -2860,
        3620
      ],
      "id": "1bf55aef-e8d5-4a90-a226-1041649bed82",
      "name": "OpenAI Chat Model4",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -2560,
        3780
      ],
      "id": "c7b2ac0e-6ede-4fb9-a563-0e65080d2de2",
      "name": "Wait2",
      "webhookId": "cd1f35d3-c129-4957-a72b-9f1fea576935",
      "disabled": true
    },
    {
      "parameters": {
        "content": "",
        "height": 140,
        "width": 480,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4420,
        3460
      ],
      "typeVersion": 1,
      "id": "bd5ee2dc-895c-4a22-819b-f919066ca18d",
      "name": "Sticky Note58",
      "disabled": true
    },
    {
      "parameters": {
        "content": "# Follow up Whatsapp",
        "height": 80,
        "width": 393,
        "color": 5
      },
      "id": "a615c8ff-d89d-40b2-b3d7-59c76a1165f0",
      "name": "Sticky Note59",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4400,
        3480
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -3340,
        3840
      ],
      "id": "325f1936-4925-483d-95c4-74db617f538a",
      "name": "OpenAI Chat Model3",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "keyValue": "={{ $('Variáveis').first().json.telefone }}"
            },
            {
              "keyName": "app",
              "keyValue": "teste"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1500,
        2380
      ],
      "id": "185cc9d9-3a4d-458d-a750-5eeb603e2719",
      "name": "Busca Telefone",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "pty9NpvC0CxgfQaB",
          "name": "JAPI SUPA ACCOUNT"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "tableId": "chats",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $('Variáveis').first().json.telefone }}"
            },
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now}}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $('Code1').first().json.sessionId }}"
            },
            {
              "fieldId": "app",
              "fieldValue": "terapeuta"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1880,
        2320
      ],
      "id": "665cb0cd-78bf-481b-bf16-03b517bbdba0",
      "name": "Adiciona CHAT supabase",
      "credentials": {
        "supabaseApi": {
          "id": "pty9NpvC0CxgfQaB",
          "name": "JAPI SUPA ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Variáveis').first().json.telefone }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "updated_at",
              "fieldValue": "={{ $now }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1880,
        2480
      ],
      "id": "ef9aa2e0-a7e7-4277-ad77-5967160bfb2c",
      "name": "Atualiza CHAT Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "pty9NpvC0CxgfQaB",
          "name": "JAPI SUPA ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "tableId": "chat_messages",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "phone",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "conversation_id",
              "fieldValue": "={{ $json.phone }}"
            },
            {
              "fieldId": "bot_message",
              "fieldValue": "={{ $('LIA SDR').first().json.output }}"
            },
            {
              "fieldId": "user_message",
              "fieldValue": "={{ $('Mensagem Completa').item.json.mensagem_completa }}"
            },
            {
              "fieldId": "message_type",
              "fieldValue": "={{ $('dados_para_atendimento_humano1').first().json.message.content_type }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        2280,
        2420
      ],
      "id": "e3f8ec4a-ae6a-4c26-b1b7-ba9f69c9a1f3",
      "name": "Cria Histórico Supabase",
      "credentials": {
        "supabaseApi": {
          "id": "pty9NpvC0CxgfQaB",
          "name": "JAPI SUPA ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7c4cdb12-9452-42a6-a39a-c268bd38dce1",
              "leftValue": "={{ $json.output.length }}",
              "rightValue": 240,
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1720,
        2840
      ],
      "id": "6d7938a9-cf5e-44af-994c-cb2b918b7f46",
      "name": "Menos que 240 Caracteres"
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.messages",
        "options": {
          "destinationFieldName": "output"
        }
      },
      "id": "41bff3dc-7ec5-4f06-967e-1e7763a6c72c",
      "name": "Split de Mensagem",
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        2300,
        2920
      ]
    },
    {
      "parameters": {
        "amount": 1.5
      },
      "id": "37983531-bef5-4daa-b62e-b92b6e35bf2c",
      "name": "1 segundo",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2820,
        2940
      ],
      "webhookId": "2ec24a1a-31fc-49f0-8e2f-532b131f1bd9"
    },
    {
      "parameters": {
        "jsCode": "return $items(\"Set File ID\").map(item => {\n  return {\n    json: {\n      file_id: item.json.file_id,\n      file_type: item.json.file_type\n    }\n  };\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3800,
        4660
      ],
      "id": "9c1fa091-e498-4e5c-8bc5-6f80fbd266a2",
      "name": "Retorna ID do arquivo",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $json.file_id }}*"
      },
      "id": "7da6a2e4-87f6-44e7-821f-1431171306b3",
      "name": "Deleta linhas antigas do documento",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -4000,
        4660
      ],
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "content": "# Webhook",
        "height": 80,
        "width": 196,
        "color": 5
      },
      "id": "6dd6789f-5884-4097-81d5-478d50df1ffb",
      "name": "Sticky Note67",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4400,
        2820
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('Code1').item.json.sessionId }}"
      },
      "id": "9a074ef6-eb95-4db6-9903-09761394093a",
      "name": "Delete Memory",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2440,
        2420
      ],
      "credentials": {
        "redis": {
          "id": "G4I5pRzqKbahv2ji",
          "name": "REDIS ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "content": "# Agendamento",
        "height": 80,
        "width": 283,
        "color": 5
      },
      "id": "55335fb9-38f5-4340-b015-7fa7a0ecc7ad",
      "name": "Sticky Note15",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1840,
        4740
      ],
      "disabled": true
    },
    {
      "parameters": {},
      "id": "098ca257-7b51-472c-9652-ecb6dd3750bd",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1800,
        5040
      ],
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "be5649a9-7624-4621-bd2d-84c25577c0ce",
              "leftValue": "={{ $json.available }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "12fff550-6121-4af2-8d03-f5d444ae0442",
      "name": "If6",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1100,
        5260
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "86ff282a-3ede-4417-98c1-0d10858bc5dc",
              "name": "response",
              "value": "=Você já tem uma reunião agendada para o dia: {{(() => { \n    const data = new Date($json.start.dateTime);\n    const opcoes = { day: '2-digit', month: 'long', hour: '2-digit', minute: '2-digit' };\n    return `dia ${data.toLocaleDateString('pt-BR', opcoes).replace(' ', ' de ').replace(',', ' às')}`;\n})()}} gostaria de reagendar? ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d01cb2e1-2be0-4b07-80bf-69b77e6024be",
      "name": "Edit Fields6",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -780,
        4820
      ],
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8d192ed0-aebd-404e-8339-daab0d29651f",
              "leftValue": "={{ $item(\"0\").$node[\"Já tem um evento\"].json[\"attendees\"][\"0\"][\"email\"] }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4b3712e3-af4f-4483-be8d-56e3390a8603",
      "name": "If5",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1080,
        4820
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f842ffa-cd8f-40ab-a0a7-40dc173357a7",
              "name": "response",
              "value": "Informe o usuário que o agendamento foi cancelado e que estará sempre à disposição para um novo agendamento.",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d575dea2-82c7-41e5-8e22-94434266fd07",
      "name": "Edit Fields7",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -800,
        5040
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "04c6ca35-7572-4699-bcb7-bbf2f2a6e6a4",
              "name": "response",
              "value": "horário não disponivel, peça outro horário",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "771cd72b-12dc-4b42-aba4-df76b8556b6b",
      "name": "Edit Fields9",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -320,
        5040
      ],
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "be5649a9-7624-4621-bd2d-84c25577c0ce",
              "leftValue": "={{ $json.available }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "4e9e7489-00e8-4e2d-b8a9-2705d4ba71ca",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -620,
        4880
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7f842ffa-cd8f-40ab-a0a7-40dc173357a7",
              "name": "response",
              "value": "=sua reunião foi reagendada para a data:{{(() => { \n    const data = new Date($json.start.dateTime);\n    const opcoes = { day: '2-digit', month: 'long', hour: '2-digit', minute: '2-digit' };\n    return `dia ${data.toLocaleDateString('pt-BR', opcoes).replace(' ', ' de ').replace(',', ' às')}`;\n})()}} o link da reunião é: {{ $json.hangoutLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "7fb33416-6f8c-4ced-871f-fdaab0ce735b",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -420,
        5160
      ],
      "disabled": true
    },
    {
      "parameters": {
        "name": "user_documents",
        "description": "Contains all the information about prices and andress that you can check to answer user questions."
      },
      "id": "1d9c8adc-fcf5-4466-a075-574a4807b175",
      "name": "buscar_documentos",
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1,
      "position": [
        1560,
        3240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "806d2106-d234-428e-a909-db00044fc342",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger3').item.json.timestamp.toDateTime().plus(0, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            },
            {
              "id": "aab42f56-d82f-434d-8319-00e3c2c690f3",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger3').item.json.timestamp.toDateTime().plus(5, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -1160,
        6020
      ],
      "id": "7582dd46-9f64-4625-8369-8171ca3eba54",
      "name": "5 Minutos antes",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "806d2106-d234-428e-a909-db00044fc342",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger3').item.json.timestamp.toDateTime().plus(115, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "after"
              }
            },
            {
              "id": "aab42f56-d82f-434d-8319-00e3c2c690f3",
              "leftValue": "={{ $json.start.dateTime }}",
              "rightValue": "={{ $('Schedule Trigger3').item.json.timestamp.toDateTime().plus(120, minutes) }}",
              "operator": {
                "type": "dateTime",
                "operation": "before"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -1160,
        5660
      ],
      "id": "1971eb2b-ce05-4191-9a4b-95c094b1852a",
      "name": "2 Hora antes",
      "alwaysOutputData": true,
      "disabled": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5427ed1f-2dd2-4f7c-b7f4-9b13cd780bc7",
              "leftValue": "={{ $json.kind }}",
              "rightValue": "calendar#event",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -960,
        5660
      ],
      "id": "9d9bb8b4-e8a8-4063-ab22-fabf1b816076",
      "name": "If7",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5427ed1f-2dd2-4f7c-b7f4-9b13cd780bc7",
              "leftValue": "={{ $json.kind }}",
              "rightValue": "calendar#event",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -960,
        6020
      ],
      "id": "370acc28-a4dd-4bb3-9582-b22e83dc251f",
      "name": "If8",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a5af6299-68f1-4d3a-b2a7-c2ed65aa4ae6",
              "name": "remoteJid",
              "value": "={{ $('Loop Over Items4').item.json.description }}",
              "type": "string"
            },
            {
              "id": "fc721c8e-bfd6-4364-9c30-b0038118856f",
              "name": "Tempo",
              "value": "Crie uma mensagem avisando que falta 2 horas para a reunião ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -720,
        5640
      ],
      "id": "05f52885-0817-4d17-8913-eaffffee16d0",
      "name": "Edit Fields5",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields5').item.json.Tempo }}",
        "options": {
          "systemMessage": "=Você foi acionado pois vai avisar quanto tempo falta para a reunião, diga apenas o tempo que falta e se precisa de algo antes da reunião, sem dicas de uso ou informações extras, exemplo: falta 2 horas para nossa reunião, precisando de qualquer coisa só falara comigo! "
        }
      },
      "id": "bffeff83-f388-44fb-9983-ef1a6f705009",
      "name": "Atendente1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -380,
        5620
      ],
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields2').item.json.Tempo }}",
        "options": {
          "systemMessage": "=Você foi acionado pois vai avisar quanto tempo falta para a reunião, diga apenas o tempo que falta e se precisa de algo antes da reunião, sem dicas de uso ou informações extras, exemplo: nosso time já está entrando na call"
        }
      },
      "id": "28729d04-cde3-4860-a1f7-309d78111aa8",
      "name": "Atendente2",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -380,
        6020
      ],
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c930cacf-b5ee-4120-a192-d68715d71d57",
              "name": "remoteJid",
              "value": "={{ $('Google Calendar').item.json.description }}",
              "type": "string"
            },
            {
              "id": "e7775c3f-04e5-4b6f-9695-dad8654b7ff8",
              "name": "Tempo",
              "value": "Crie uma mensagem avisando que falta 5 minutos para a reunião ",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -760,
        6000
      ],
      "id": "bb5b119d-5099-4582-80ee-a8304c144a69",
      "name": "Edit Fields2",
      "disabled": true
    },
    {
      "parameters": {
        "content": "# AVISO REUNIÃO CHEGANDO",
        "height": 80,
        "width": 551.2183277924504,
        "color": 5
      },
      "id": "4bc70193-0c9f-401e-b28f-d59404dec5e8",
      "name": "Sticky Note27",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1900,
        5560
      ],
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -400,
        5840
      ],
      "id": "20d66315-be07-45d9-b1d5-8e1e74481ce1",
      "name": "OpenAI Chat Model5",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "62b1e970-0ccd-47a2-8b32-b0056ae0876c",
      "name": "Loop Over Items4",
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -1400,
        5740
      ],
      "disabled": true
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        180,
        6040
      ],
      "id": "dbb1a9da-bd85-4f54-8b1d-0716c1f34fd2",
      "name": "Wait",
      "webhookId": "1652a979-d426-42ae-8458-da1ee045bfb4",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "nr_telefone",
              "keyValue": "={{ $('Variáveis').item.json.telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -2280,
        2980
      ],
      "id": "9ebca1b0-d3f9-43be-bb8d-f6749cface41",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "pty9NpvC0CxgfQaB",
          "name": "JAPI SUPA ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.nr_telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -2100,
        2980
      ],
      "id": "d6bb7372-5d80-40fc-a2a6-f803fe18296b",
      "name": "If1"
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -1980,
        3080
      ],
      "id": "d9dbe2fa-a94f-46f5-95b6-7d10cc02595d",
      "name": "Gerar sessionID"
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $json.data }}"
            },
            {
              "fieldId": "nr_telefone",
              "fieldValue": "={{ $('Variáveis').item.json.telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1840,
        3080
      ],
      "id": "7fb7b87d-246f-4169-8db9-ca9d64117f0d",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "pty9NpvC0CxgfQaB",
          "name": "JAPI SUPA ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Obtém os valores dos nós anteriores\nconst sessionid1 = $input.last().json.data;  // Do nó \"Gerar sessionID\"\nconst sessionid2 = $input.last().json.sessionid;  // Do nó \"Supabase\"\n\n// Retorna apenas o que existir, chamando sempre de \"sessionId\"\nreturn [{ sessionId: sessionid1 || sessionid2 || null }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1720,
        2920
      ],
      "id": "8ed3d82c-a282-45e8-ab6b-4ba193f1f23e",
      "name": "Code1"
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "custom",
        "customFormat": "dd-MM-yyyy",
        "options": {}
      },
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 2,
      "position": [
        -2480,
        2980
      ],
      "id": "02620fca-acb3-4c85-b18c-c22e2905a009",
      "name": "Date & Time1"
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.png",
          "mimeType": "image/png"
        }
      },
      "id": "84a0ddfd-aede-4048-aa8a-9a31615893fc",
      "name": "Convert to File1",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -1580,
        3080
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "0df62a6f-7291-4c7d-989c-ada9a8619415",
      "name": "Edit Fields3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1720,
        3080
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "ade56c50-1520-4760-8df5-e99617d6d3ad",
              "leftValue": "={{ $('Webhook EVO').item.json.body.data.message.imageMessage.caption }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "87daaae3-25c3-4858-bacc-02f3e351c804",
      "name": "If3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -1280,
        3080
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook EVO').item.json[\"body\"][\"data\"][\"message\"][\"imageMessage\"][\"caption\"] }}, {{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "f089cd73-d303-425c-ab8a-c78ec403d118",
      "name": "Redis4",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1020,
        3100
      ],
      "credentials": {
        "redis": {
          "id": "G4I5pRzqKbahv2ji",
          "name": "REDIS ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $json.content.replace(/\\n/g, \"\\\\n\").replace(/['\"]/g, '').trim()  }}",
        "tail": true
      },
      "id": "0d07edd2-d282-4f70-ba18-42efac468d59",
      "name": "Redis5",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1020,
        2960
      ],
      "credentials": {
        "redis": {
          "id": "G4I5pRzqKbahv2ji",
          "name": "REDIS ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Resumo curto da imagem. Responda sem acento, sem hifens",
        "inputType": "base64",
        "options": {}
      },
      "id": "788da6f2-c335-47a7-b9e5-4e295fd8742a",
      "name": "OpenAI1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -1420,
        3080
      ],
      "credentials": {
        "openAiApi": {
          "id": "N0uSe42ux49uqSfq",
          "name": "JAPI OPENAI"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d5a342e9-585b-42ea-be44-644adae10199",
              "leftValue": "={{ $json.Redis2 }}",
              "rightValue": "={{ $json.Redis1 }}",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "b25df7ce-d847-4831-a607-0b27f8b99760",
      "name": "Compara Get Memory1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        40,
        2880
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $('Webhook').first().json.body.text.message }}",
        "tail": true
      },
      "id": "fdb2a425-6b3e-44bb-aef3-5641cfc30f7b",
      "name": "Text Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -800,
        2620
      ],
      "credentials": {
        "redis": {
          "id": "G4I5pRzqKbahv2ji",
          "name": "REDIS ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Code1').item.json.sessionId }}",
        "messageData": "={{ $json.text }}",
        "tail": true
      },
      "id": "3d5f092b-25de-443f-8bc3-3edcfa79bdf0",
      "name": "Audio Memory1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -1020,
        2800
      ],
      "credentials": {
        "redis": {
          "id": "G4I5pRzqKbahv2ji",
          "name": "REDIS ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f336a1ff-e577-489d-a739-1eb8bd509245",
              "name": "Redis2",
              "value": "={{ $json.propertyName }}",
              "type": "string"
            },
            {
              "id": "946d1420-e379-46e3-8fcd-3816340fbabb",
              "name": "Redis1",
              "value": "={{ $('Get Memory 1').item.json.propertyName }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "adc81a2b-df5f-4e52-b5aa-e8ff86b6e862",
      "name": "Edit Fields8",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -140,
        2880
      ]
    },
    {
      "parameters": {
        "amount": 40
      },
      "id": "0d49e73c-f976-4dd9-ad8f-d14c406566db",
      "name": "Wait3",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -460,
        2880
      ],
      "webhookId": "7508fa49-bc87-45fc-bc55-e92f0d00664a",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "522a57e9-74ac-45c9-8341-325a6eba3de3",
      "name": "Get Memory 1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -620,
        2880
      ],
      "credentials": {
        "redis": {
          "id": "G4I5pRzqKbahv2ji",
          "name": "REDIS ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "key": "={{ $('Code1').item.json.sessionId }}",
        "options": {}
      },
      "id": "5181f5de-5f8f-4220-a897-20540ab9f1e2",
      "name": "Get Memory 2",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -300,
        2880
      ],
      "credentials": {
        "redis": {
          "id": "G4I5pRzqKbahv2ji",
          "name": "REDIS ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "nr_telefone",
              "keyValue": "={{ $json.nr_telefone }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1880,
        2920
      ],
      "id": "cfb2b3d6-e4c5-4fbe-b98a-a9939341bc3c",
      "name": "Get Dados",
      "credentials": {
        "supabaseApi": {
          "id": "pty9NpvC0CxgfQaB",
          "name": "JAPI SUPA ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d88c137-383f-4307-b3cc-1f6a560ea67b",
              "name": "telefone",
              "value": "={{ $('Webhook').item.json.body.phone }}",
              "type": "string"
            },
            {
              "id": "7e2f520e-4952-425b-82ca-792cc46680d4",
              "name": "mensagem",
              "value": "={{ $('Webhook').item.json.body.text.message }}",
              "type": "string"
            },
            {
              "id": "de1388b1-a6e4-42df-a6a5-7e9b4594f97d",
              "name": "body.event",
              "value": "={{ $('Webhook').item.json.body.fromMe }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c02ed19d-681e-42a7-8eee-f16f517eb2cd",
      "name": "Variáveis",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2640,
        2980
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f16b1bf-1a3e-4029-8d7a-1bccb919ee43",
              "name": "message.message_id",
              "value": "={{ $json.body.messageId }}",
              "type": "string"
            },
            {
              "id": "11800d83-ecca-4f9c-a878-a2419db0c8e9",
              "name": "message.chat_id",
              "value": "={{ $json.body.chatLid }}",
              "type": "string"
            },
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $json.body.type }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('Webhook').item.json.body.text.message }}\n",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.timestamp",
              "value": "=",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.content_url",
              "value": "=",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $json.body.fromMe }}",
              "type": "string"
            },
            {
              "id": "b2f1f6b5-292f-4695-9e41-be200c6d7053",
              "name": "instance.name",
              "value": "={{ $('Webhook').item.json.body.instanceId }}",
              "type": "string"
            },
            {
              "id": "572fcce5-8a26-4e8f-a48a-ef0bee569dcd",
              "name": "instance.apikey",
              "value": "={{ $('Webhook').item.json.headers['z-api-token'] }}",
              "type": "string"
            },
            {
              "id": "e90043db-657b-461c-b040-2d6089abfbdb",
              "name": "instance.server_url",
              "value": "={{ $('Webhook').item.json.headers.origin }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "35ade37e-fbd3-499b-9503-f23fc9ef58d6",
      "name": "dados_para_atendimento_humano1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3460,
        3000
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Ativa"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "3ef0e01c-cc14-4663-bb4d-2905b350c3ab",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Ia Desativada"
            }
          ]
        },
        "options": {}
      },
      "id": "092c5f56-3ca4-41f6-b47f-6b1252f187b9",
      "name": "Switch Block",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -2880,
        3080
      ]
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $json.message.chat_id }}_block",
        "value": "true",
        "keyType": "string",
        "expire": true,
        "ttl": 4320000
      },
      "id": "b56bbbca-f596-4f37-93e4-3c0911c0b965",
      "name": "PARA IA",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3260,
        2920
      ],
      "credentials": {
        "redis": {
          "id": "G4I5pRzqKbahv2ji",
          "name": "REDIS ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $json.message.chat_id }}_block",
        "options": {}
      },
      "id": "fb2423e0-4a3b-4794-b909-1069d568af4d",
      "name": "Verificar Atendimento",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -3040,
        3080
      ],
      "credentials": {
        "redis": {
          "id": "G4I5pRzqKbahv2ji",
          "name": "REDIS ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data = $item(0).$node[\"Compara Get Memory1\"].json[\"Redis2\"]; // Obtém o valor de Redis2 do nó \"If\"\n\n// Verifica se o dado é uma string que representa um array, e converte se necessário\nlet array = Array.isArray(data) ? data : JSON.parse(data);\n\n// Junta os elementos do array com um espaço entre eles\nconst mensagem_completa = array.join(\" \");\n\n// Retorna o resultado com o nome da variável \"mensagem_completa\"\nreturn [{ json: { mensagem_completa } }];\n"
      },
      "id": "fda6bd01-bbd1-4a24-a179-ff7309658c1e",
      "name": "Mensagem Completa",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        2740
      ]
    },
    {
      "parameters": {
        "operation": "toBinary",
        "sourceProperty": "data",
        "options": {
          "fileName": "file.ogg",
          "mimeType": "application/ogg"
        }
      },
      "id": "50630ae6-2fca-4a04-b932-1fd32ab09c9f",
      "name": "Convert to File",
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        -1380,
        2880
      ]
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "b442bf7f-013c-4f18-95e1-fae97ca8a2d1",
      "name": "OpenAI",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        -1200,
        2880
      ],
      "credentials": {
        "openAiApi": {
          "id": "N0uSe42ux49uqSfq",
          "name": "JAPI OPENAI"
        }
      }
    },
    {
      "parameters": {
        "content": "# Pausa para Atendimento Humano",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "aa9b2c75-7e78-45bf-889b-e5ba812eec36",
      "name": "Sticky Note46",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3880,
        2760
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c5ccbc9-69d1-4b13-a7c3-e6945bc8c655",
              "name": "data",
              "value": "={{ $('Webhook EVO').item.json.body.data.message.base64 }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "6a780048-cedd-4e21-b315-a5a374cfb1c0",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1540,
        2880
      ]
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU",
          "mode": "list",
          "cachedResultName": "PP lista 2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1295001948,
          "mode": "list",
          "cachedResultName": "WA-Download Group Phone Numbers",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU/edit#gid=1295001948"
        },
        "combineFilters": "OR",
        "options": {
          "returnFirstMatch": false
        }
      },
      "id": "51a12133-e84f-4846-aa90-daeefd30c7b5",
      "name": "Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1600,
        6700
      ],
      "executeOnce": true,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "delete",
        "documentId": {
          "__rl": true,
          "value": "1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU",
          "mode": "list",
          "cachedResultName": "PP lista 2",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1295001948,
          "mode": "list",
          "cachedResultName": "WA-Download Group Phone Numbers",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1RW-Wb02RQ5Fkbukg3cKTu1SvyCGsLg7kmxrFLinpbBU/edit#gid=1295001948"
        }
      },
      "id": "95b8499d-e9df-41ba-ac68-a3dcce322aff",
      "name": "Google Sheets1",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        280,
        6680
      ],
      "disabled": true
    },
    {
      "parameters": {
        "amount": 1
      },
      "id": "73e776c3-921b-4a3f-9de9-d46c4c2c1ea7",
      "name": "Wait1",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -1400,
        6700
      ],
      "webhookId": "78f1c2c3-6305-4095-9a10-04987b76a7b8",
      "disabled": true
    },
    {
      "parameters": {
        "content": "# CAPTAÇÃO DE CLIENTES",
        "height": 80,
        "width": 551.2183277924504,
        "color": 5
      },
      "id": "a022c608-ec2f-42a5-86fc-cbe808cf7770",
      "name": "Sticky Note30",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1840,
        6560
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chats",
        "filters": {
          "conditions": [
            {
              "keyName": "app",
              "condition": "eq",
              "keyValue": "drana"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1240,
        4460
      ],
      "id": "a9ead97c-7095-438b-8d20-9fd3ffd4e9be",
      "name": "ListChats-Supabase2",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "chat_messages",
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "phone",
              "condition": "eq",
              "keyValue": "={{ $('Webhook EVO').item.json.body.data.key.remoteJid }}"
            },
            {
              "keyName": "active",
              "condition": "eq",
              "keyValue": "true"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1760,
        4480
      ],
      "id": "4d769532-4307-499d-a18d-40055ef0d7b6",
      "name": "ListMessages-Supabase2",
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "conversas",
        "include": "specifiedFields",
        "fieldsToInclude": "id,message_type,created_at,user_message, bot_message,phone, conversation_id",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        2020,
        4480
      ],
      "id": "40d59ada-3938-4600-bf20-f23175174d7d",
      "name": "Aggregate2",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "return $('Aggregate2').all().map(item => {\n  // Tenta acessar a propriedade 'conversas' e verifica se ela é um array\n  const conversas = item.json.conversas || []; // Garante que é pelo menos um array vazio\n\n  if (!Array.isArray(conversas)) {\n    throw new Error(\"A propriedade 'conversas' não é um array.\");\n  }\n\n  // Processa cada conversa e verifica as mensagens\n  const textoUnico = conversas.map(conversa => {\n    const cliente = conversa.user_message || \"sem mensagem do chatbot\";\n    const agente = conversa.bot_message || \"sem resposta\";\n    \n    // Verifica se a data existe e formata\n    const dataOriginal = conversa.created_at || \"Data da Mensagem indisponível\";\n    const dataFormatada = dataOriginal !== \"Data da Mensagem indisponível\"\n      ? formatarData(dataOriginal)\n      : dataOriginal;\n\n    return `em: ${dataFormatada}\\n\\n - agente(chatbot): ${agente} \\n - cliente: ${cliente}\\n`;\n  }).join('\\n\\n');\n\n  // Retorna o texto final como resultado\n  return {\n    json: {\n      texto: textoUnico\n    }\n  };\n});\n\n// Função para formatar a data\nfunction formatarData(dataString) {\n  const data = new Date(dataString); // Converte a string em objeto Date\n  if (isNaN(data)) {\n    return \"Data inválida\"; // Retorna se a data não for válida\n  }\n  \n  // Formata no padrão DD/MM/YYYY HH:mm\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // Mês começa em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} ${horas}:${minutos}`;\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2260,
        4480
      ],
      "id": "c115c8df-b574-4b23-a245-42b2f168a37e",
      "name": "Code6",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1480,
        4460
      ],
      "id": "34cf97ba-e1ef-4df6-b30c-48879be9eb13",
      "name": "Loop Over Items6",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Você é um agente resumidor de casos dos clientes, você analisa a conversa entre o agente e o cliente e cria um resumo do problema que ele está enfrentando de forma bem detalhada somente do problema do cliente e preferencia pela data da sessão, não precisa de informações sobre as respostas do agente para o cliente, e gera o resultado sem dicas de uso ou informações extras \n\n# Conversa entre o cliete e o agente de IA:\n{{ $json.texto }}"
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.5,
      "position": [
        2500,
        4460
      ],
      "id": "84c7cb79-fcd2-4738-a9bc-db33ef3daac4",
      "name": "Basic LLM Chain1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        2460,
        4640
      ],
      "id": "401bb6fe-d3a2-4138-af51-f818d69382b5",
      "name": "OpenAI Chat Model6",
      "disabled": true
    },
    {
      "parameters": {
        "content": "# AVISAR NOVO LEAD NO GRUPO",
        "height": 80,
        "width": 656,
        "color": 5
      },
      "id": "b4a575ab-6950-4d3b-93cf-76885a839ada",
      "name": "Sticky Note51",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1220,
        4340
      ],
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c5e41bbd-c264-4a36-b76e-cef79392855b",
              "leftValue": "={{ $json.body.phone }}",
              "rightValue": "5511996458904",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -3840,
        2980
      ],
      "id": "882326a0-6a4b-48f8-bc7d-1f4464c7891f",
      "name": "If2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "86ff282a-3ede-4417-98c1-0d10858bc5dc",
              "name": "response",
              "value": "=Agendamento concluído para a data {{(() => { \n    const data = new Date($json.start.dateTime);\n    const opcoes = { day: '2-digit', month: 'long', hour: '2-digit', minute: '2-digit' };\n    return `dia ${data.toLocaleDateString('pt-BR', opcoes).replace(' ', ' de ').replace(',', ' às')}`;\n})()}}\no link da reunião é: {{ $json.hangoutLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "5471d025-f794-4617-bf7f-bb0d3437e15c",
      "name": "Edit Fields10",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -80,
        4860
      ],
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Google Calendar').item.json.description }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -540,
        6000
      ],
      "id": "8153390b-72a6-43f5-b2e5-63a018488841",
      "name": "Supabase4",
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Loop Over Items4').item.json.description }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -540,
        5640
      ],
      "id": "4cf54101-88da-44e5-89a8-f41cc1fa0a9f",
      "name": "Supabase3",
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Edit Fields2').item.json.Tempo }}",
        "options": {
          "systemMessage": "=Crie uma mensagem que vai ser enviada no WhatsApp, abaixo vou te mandar o nome completo da pessoa e um exemplo de mensagem, mas quero que chame a pessoa somente pelo primeiro nome, me de a resposta pronta para ser enviada sem dicas de uso ou informações extras, somente o resultado, pois será enviada via automação  \n\nMande somente o primeiro nome\n\nMensagem: Olá, {{ $('Google Sheets').item.json.socios }} tudo bem?  \n\nCaso não tenha um nome \nmande: olá, tudo bem é da empresa {{ $json.razao_social }}"
        }
      },
      "id": "aa7c874a-c2ef-4cc3-b349-35031df22133",
      "name": "Atendente3",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        -320,
        6660
      ],
      "executeOnce": true,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Google Sheets').item.json['Phone Number \t\t\t'].replace('+', '') }}@s.whatsapp.net\n"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1180,
        6700
      ],
      "id": "14c015e8-b031-4cf7-bde9-3cd0f20eb13e",
      "name": "Supabase5",
      "alwaysOutputData": true,
      "executeOnce": true,
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a6d9aac-8565-4c58-abe3-8741393a5535",
              "leftValue": "={{ $json.telefone }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -980,
        6700
      ],
      "id": "ee6faec4-baad-4cd3-bb08-262407ddcc99",
      "name": "If9",
      "disabled": true
    },
    {
      "parameters": {
        "action": "generate"
      },
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        -780,
        6820
      ],
      "id": "c0f937bd-1d41-436d-b495-376aeaea9bec",
      "name": "Gerar sessionID1",
      "disabled": true
    },
    {
      "parameters": {
        "tableId": "dados_cliente",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "sessionid",
              "fieldValue": "={{ $json.data }}"
            },
            {
              "fieldId": "telefone",
              "fieldValue": "={{ $('Google Sheets').item.json['Phone Number \t\t\t'] }}@s.whatsapp.net"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -640,
        6820
      ],
      "id": "5bdf241e-8991-4b11-bde7-6d27fe46e5a1",
      "name": "Supabase6",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Obtém os valores dos nós anteriores\nconst sessionid1 = $input.item.json.data;  // Do nó \"Gerar sessionID\"\nconst sessionid2 = $input.item.json.sessionid;  // Do nó \"Supabase\"\n\n// Retorna apenas o que existir, chamando sempre de \"sessionId\"\nreturn [{ sessionId: sessionid1 || sessionid2 || null }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -520,
        6660
      ],
      "id": "20d8e98d-aa27-471e-8f63-fc4a55c4a2b5",
      "name": "Code",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "dados_cliente",
        "filters": {
          "conditions": [
            {
              "keyName": "telefone",
              "keyValue": "={{ $('Google Sheets').item.json['Phone Number \t\t\t'].replace('+', '') }}@s.whatsapp.net\n"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -680,
        6660
      ],
      "id": "05978858-22b8-4669-bcc8-88a6e13c6c9d",
      "name": "Get Dados1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -3620,
        4660
      ],
      "id": "9e28adc2-3279-4f1b-84b6-a5616ee42c05",
      "name": "Loop Over Items1",
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "2ae7faa7-a936-4621-a680-60c512163034",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fc193b06-363b-4699-a97d-e5a850138b0e",
                    "leftValue": "={{ $json.file_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {
          "fallbackOutput": 2
        }
      },
      "id": "4dda4964-3098-462d-9b91-5462e0563992",
      "name": "Switch5",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -3260,
        4680
      ],
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook').item.json.body.text.message }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook').item.json.body.type }}",
                    "rightValue": "ReceivedCallback",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "=",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "c0e434dd-1268-421d-b81b-3a5e90ed9550",
                    "leftValue": "=",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "image"
            }
          ]
        },
        "options": {}
      },
      "id": "aa080758-8f4c-4aa6-9bfb-577c96a5d3fe",
      "name": "Switch7",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -1800,
        2780
      ],
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Busca Info no RAG",
        "height": 80,
        "width": 250,
        "color": 5
      },
      "id": "e7878483-dcc9-4d74-90e1-4b5f034e5a6b",
      "name": "Sticky Note13",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1240,
        3640
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.sessionid }}",
        "tableName": "n8n_chat_histories_lia",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -240,
        5840
      ],
      "id": "0611e7c0-5eb8-48ef-8689-4958715a49b5",
      "name": "Postgres Chat Memory3",
      "disabled": true
    },
    {
      "parameters": {
        "content": "# Ferramenta para Adicionar um Arquivo do Google Drive ao Banco de Dados Vetorial.",
        "height": 120,
        "width": 1493,
        "color": 5
      },
      "id": "1de58cd6-0471-46ea-afeb-9888b4acdcf9",
      "name": "Sticky Note14",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -4400,
        4400
      ],
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 2,
              "triggerAtHour": 8,
              "triggerAtMinute": 45
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -4380,
        3660
      ],
      "id": "e43e232f-db5c-44db-8afc-c1b9d82d3645",
      "name": "Schedule Trigger3",
      "disabled": true
    },
    {
      "parameters": {
        "options": {
          "frequencyPenalty": 0.1,
          "responseFormat": "text",
          "presencePenalty": 0.1,
          "temperature": 0.3,
          "timeout": 60000,
          "topP": 0.5
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        440,
        2480
      ],
      "id": "0fa79ed0-3620-416c-ae14-52d78d81cb4f",
      "name": "OpenAI Chat Model7",
      "credentials": {
        "openAiApi": {
          "id": "N0uSe42ux49uqSfq",
          "name": "JAPI OPENAI"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"Evento\"] }}",
                    "rightValue": "agendamento",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "agendamento"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7a57e8e8-5227-4cde-8d58-7b447cd55a17",
                    "leftValue": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"Evento\"] }}",
                    "rightValue": "cancelamento",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "cancelamento"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d788021f-29ab-41f2-b355-2b18963d30f2",
                    "leftValue": "={{ $item(\"0\").$node[\"Execute Workflow Trigger\"].json[\"Evento\"] }}",
                    "rightValue": "reagendamento",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reagendamento"
            }
          ]
        },
        "options": {}
      },
      "id": "78a6aac4-1cc3-4ed0-ab82-50b25cb657d5",
      "name": "Switch4",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1540,
        5060
      ],
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "https://meet.google.com/",
                    "operator": {
                      "type": "string",
                      "operation": "notContains"
                    },
                    "id": "688e7624-00b1-4b2e-beea-c22d303a1669"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Fluxo Normal"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "820760d6-3546-4007-8917-55d366a74261",
                    "leftValue": "={{ $json.output }}",
                    "rightValue": "https://meet.google.com",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Avisa grupo"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1200,
        2840
      ],
      "id": "0e29e04b-7781-4617-8fcb-caf944a42435",
      "name": "Switch2"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "fd864e1b-1db5-4df2-b5c0-03605b0635dd"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $json.message.event }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "b3053b03-506e-435f-ab8d-0588584dda49",
      "name": "Switch8",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -3600,
        2860
      ],
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagem_completa }}",
        "options": {
          "systemMessage": "=OBJETIVO FINAL\nConverter o máximo de leads qualificados em visitas agendadas, utilizando empatia, dados (Listing Score > 70) e automação inteligente, proporcionando uma experiência fluida e humanizada.\n\nIDENTIDADE\nNome: Lia Serhant\nCargo: SDR Especialista em Conversão via WhatsApp\nDNA:\nConsultora Humanizada: Usa o nome do lead e mantém um tom empático e acessível.\nEstrategista de Dados: Prioriza imóveis com Listing Score > 70.\nGeradora de Urgência: Emprega gatilhos mentais sutis e naturais.\nTom de Voz: Moderno, empático e colaborativo, inspirando confiança e proximidade.\nCONTEXTO\nTipos de Lead:\nComprador/Aluguel: Buscar imóveis → Agendar visita\nVendedor: Notificar a gerente via GERENTE_MESSAGE\nSuporte: Fornecer contatos clicáveis\nAdministrativo: Enviar mensagem com contatos clicáveis para setores administrativos\nPlataforma: WhatsApp (mensagens curtas, links rastreáveis, imagens de imóveis).\nFERRAMENTAS DISPONÍVEIS\nGERENTE_MESSAGE: Enviar mensagem para a gerente Heljny Braga (executar apenas para leads vendedores).\nSQL_PREFERENCIA: Atualizar as preferências do cliente no Supabase, usando o número de telefone como chave principal (executar sempre que uma preferência for identificada ou ajustada para atualizar o campo de preferências).\nCLNT_STATUS: Buscar o status do cliente (executar para identificar o tipo de lead).\nCLNT_ATT_STATUS: Atualizar o status do cliente no Supabase, usando o número de telefone como chave principal (executar para definir o status como \"primeiro contato\" se for o primeiro contato do cliente).\nUPT_ACOMPANHAMENTO: Atualizar acompanhamento do cliente (executar para registrar interações).\nCLNT_PREF: Buscar preferências do cliente (executar sempre que necessário buscar preferências).\nATLAS: Pesquisar imóveis no site da Japi (executar apenas para busca de imóveis, considerando as preferências do cliente).\nCT_C2S: Cadastrar lead no CRM C2S (executar para registrar novos leads).\nMSG_CORRETOR: Enviar mensagem de agendamento ao corretor via WhatsApp (executar para notificar o corretor sobre visitas).\nREGRAS PRIMORDIAIS\nSEMPRE confirme informações com o cliente antes de assumir preferências ou repetir perguntas.\nNUNCA exponha dados sensíveis (ex.: CPF, endereço completo).\nPRIORIZE imóveis com Listing Score > 70 e envie ao cliente apenas os 3 melhores imóveis com base no Listing Score (valores mais altos), calculado conforme o sistema de scoring definido.\nRESPONDA em menos de 1 minuto para maximizar engajamento.\nExecute a ferramenta GERENTE_MESSAGE apenas para leads identificados como vendedores.\nExecute a ferramenta ATLAS apenas quando solicitado para buscar imóveis, considerando as preferências do cliente e ajustando o tipo de busca para \"a-venda\" (compra) ou \"para-alugar\" (aluguel).\nReconhecimento e Categorização de Preferências:\nAnalise cada mensagem do cliente para identificar preferências, considerando:\nTipo de imóvel: \"casa\", \"apartamento\", \"sítio\", \"terreno\", etc.\nIntenção: \"comprar\", \"alugar\", \"vender\", \"compra\", \"aluguel\", etc.\nOrçamento: \"até R$\", \"por R$\", \"menos de\", valores monetários (ex.: \"R$800k\", \"800 mil\").\nLocalização: Nomes de cidades/bairros (ex.: \"Jundiaí\", \"São Paulo\"), \"perto de\", \"na região de\".\nOutros detalhes: \"3 quartos\", \"com garagem\", \"2 banheiros\", etc.\nExemplos de mensagens com preferências:\n\"Quero comprar uma casa em Jundiaí até R$800k\" → Categorize: \"casa, comprar, até R$800k, Jundiaí\".\n\"Busco um ap pra alugar em SP por R$2k\" → Categorize: \"apartamento, alugar, até R$2k, São Paulo\".\n\"Preciso de uma casa com 3 quartos\" → Categorize: \"casa, 3 quartos\".\n\"Quero um apartamento de 2 quartos em Campinas até R$500k para comprar\" → Categorize: \"apartamento, comprar, 2 quartos, até R$500k, Campinas\".\nSe uma preferência for reconhecida:\nCategorize a informação como uma string única (ex.: \"apartamento, comprar, 2 quartos, até R$500k, Campinas\").\nExecute a ferramenta SQL_PREFERENCIA imediatamente para atualizar o campo de preferências no Supabase, usando o número de telefone como chave principal.\nPrimeiro Contato:\nSe for o primeiro contato do cliente (ou seja, se CLNT_STATUS ou CLNT_PREF não retornarem dados prévios como status ou preferências), execute a ferramenta CLNT_ATT_STATUS para definir o status do cliente como \"primeiro contato\" no Supabase, usando o número de telefone como chave principal.\nAtualização de Preferências:\nSempre execute a ferramenta SQL_PREFERENCIA quando uma preferência for identificada ou ajustada, ou após selecionar os 3 melhores imóveis, para atualizar o campo de preferências no Supabase com base no número de telefone do cliente.\nBusca de Preferências:\nSempre execute a ferramenta CLNT_PREF quando for necessário buscar as preferências do cliente para continuar a conversa.\nLógica Pré-estabelecida para Preferências e Status:\nAtualização de Preferências: Execute SQL_PREFERENCIA automaticamente toda vez que o cliente fornecer uma mensagem com preferências reconhecidas ou ajustar uma preferência existente, atualizando o Supabase com o número de telefone como chave.\nAtualização de Status: Execute CLNT_ATT_STATUS automaticamente se for o primeiro contato do cliente, definindo o status como \"primeiro contato\".\nBusca: Execute CLNT_PREF automaticamente sempre que for necessário buscar preferências para prosseguir.\nSISTEMAS DE SCORING\n📊 Listing Score (0-100)\nO Listing Score é uma nota de 0 a 100 atribuída a cada imóvel retornado pelo ATLAS, com o objetivo de identificar os imóveis com maior potencial de gerar visitas para o cliente em específico. A pontuação deve ser calculada pela Lia com base nos seguintes critérios e pesos:\n\n60% - Compatibilidade com preferências do cliente (quartos, valor, localização):\nExemplo: Se o cliente busca \"casa, 3 quartos, até R$800k, Jundiaí\" e o imóvel corresponde exatamente, recebe 60 pontos; se faltar 1 quarto, recebe proporcionalmente menos (ex.: 40 pontos).\n10% - Tempo no mercado (quanto mais novo o imóvel no mercado, maior a pontuação):\nExemplo: Imóvel listado há 1 semana = 10 pontos; há 1 mês = 5 pontos; há 3 meses = 2 pontos.\n20% - Localização estratégica (baseada em critérios como proximidade a serviços, transporte ou valorização):\nExemplo: Localização premium = 20 pontos; localização média = 10 pontos; localização básica = 5 pontos.\n10% - Exclusividade Japi (imóveis exclusivos da imobiliária recebem pontuação máxima):\nExemplo: Exclusivo = 10 pontos; não exclusivo = 0 pontos.\nRegra: Após calcular o Listing Score para cada imóvel retornado pelo ATLAS, selecione os 3 com as maiores pontuações (priorizando os acima de 70, se disponíveis) para apresentar ao cliente.\n📊 Lead Score (0-100)\nO Lead Score é uma pontuação de 0 a 100 que avalia o potencial do lead em gerar visitas, calculado com base no modelo BANT:\n\nB (Budget): Orçamento compatível com o mercado.\nA (Authority): Capacidade de decisão do lead.\nN (Need): Necessidades claras do lead.\nT (Timing): Prazo para compra ou aluguel.\nNota: O Lead Score é uma referência para qualificação geral do lead, mas não é calculado ou utilizado diretamente pela Lia para seleção de imóveis.\nACESSO A DADOS DO CLIENTE\nNome: Use {{ $('Webhook').item.json.body.senderName }}. Se indisponível, utilize \"Prezado Cliente\".\nTelefone: Use {{ $('Webhook').item.json.body.phone }}.\nFLUXO DE AÇÃO\nEtapa 1: Identificação do Lead\nExecute CLNT_STATUS para buscar o status do cliente.\nSe o lead for identificado como Vendedor:\nExecute GERENTE_MESSAGE para notificar a gerente.\nResponda ao lead: \"Oi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Nossa gerente entrará em contato em breve para discutir a venda do seu imóvel.\"\nEncerre a conversa.\nSe o lead for identificado como Comprador/Aluguel:\nVá para Etapa 2.\nSe o lead mencionar algo relacionado ao administrativo (ex.: \"falar com o administrativo\", \"manutenção\", \"financeiro\", \"contratos\", \"condomínio\", \"IPTU\", \"rescisão\", \"boletos\", ou derivados):\nResponda com a seguinte mensagem formatada com contatos clicáveis:\ntext\n\nRecolher\n\nEncapsular\n\nCopiar\nOi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Aqui estão os contatos para suporte administrativo:  \n\nManutenção, rescisão, seguros  \n📲 [WhatsApp +5511934535974](https://wa.me/+5511934535974)  \n\nFinanceiro (boletos, suporte)  \n📲 [WhatsApp +5511941266606](https://wa.me/+5511941266606)  \n\nContratos e adendos:  \n📲 [WhatsApp +5511914374870](https://wa.me/+5511914374870)  \n\nAtendimentos - Condomínios, IPTU e trocas de titularidades  \n📲 [WhatsApp +5511975594848](https://wa.me/+5511975594848)  \nEncerre a conversa.\nSe o lead for identificado como Suporte (ex.: questões técnicas ou não relacionadas ao administrativo):\nResponda: \"Oi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Para suporte, entre em contato: (11) 9999-9999 ou suporte@japi.com.\"\nEncerre a conversa.\nSe não for possível identificar o tipo de lead ou for o primeiro contato:\nExecute CLNT_PREF para verificar se há preferências prévias.\nSe CLNT_STATUS e CLNT_PREF não retornarem dados (indicando primeiro contato):\nExecute CLNT_ATT_STATUS para definir o status como \"primeiro contato\" no Supabase, usando o número de telefone como chave principal.\nPergunte: \"Oi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Você está interessado em comprar, alugar, vender um imóvel ou precisa de suporte administrativo?\"\nAnalise a resposta do cliente:\nSe contiver preferências (ex.: \"Quero comprar uma casa em Jundiaí até R$800k\"):\nCategorize: \"casa, comprar, até R$800k, Jundiaí\".\nExecute SQL_PREFERENCIA para atualizar as preferências no Supabase usando o número de telefone como chave principal.\nSe ainda for o primeiro contato (confirmado por CLNT_STATUS e CLNT_PREF sem dados prévios), execute CLNT_ATT_STATUS para definir o status como \"primeiro contato\".\nClassifique o lead e siga as ações acima.\nEtapa 2: Seleção de Imóveis (apenas para Comprador/Aluguel)\nBusca Inicial de Preferências:\nExecute CLNT_PREF para buscar as preferências do cliente.\nSe CLNT_PREF não retornar dados e for o primeiro contato (confirmado por CLNT_STATUS sem dados prévios):\nExecute CLNT_ATT_STATUS para definir o status como \"primeiro contato\" no Supabase, usando o número de telefone como chave principal.\nSe já existirem preferências recentes retornadas por CLNT_PREF:\nConfirme com o cliente: \"Oi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Você busca {{preferencias}}. Certo?\"\nAnalise a resposta:\nSe o cliente confirmar ou ajustar (ex.: \"Sim\" ou \"Quero com 3 quartos\"):\nCategorize: \"casa, 3 quartos, até R$800k, Jundiaí\".\nExecute SQL_PREFERENCIA para atualizar as preferências no Supabase usando o número de telefone como chave principal.\nSe não houver preferências recentes retornadas por CLNT_PREF:\nExecute CLNT_PREF para buscar preferências anteriores.\nSe houver preferências anteriores:\nConfirme com o cliente: \"Oi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Encontrei que você buscou {{preferencias}} antes. Ainda está interessado nisso?\"\nAnalise a resposta:\nSe o cliente confirmar ou ajustar (ex.: \"Sim, mas agora até R$900k\"):\nCategorize: \"casa, comprar, até R$900k, Jundiaí\".\nExecute SQL_PREFERENCIA para atualizar as preferências no Supabase usando o número de telefone como chave principal.\nSe não houver dados e for o primeiro contato:\nExecute CLNT_ATT_STATUS para definir o status como \"primeiro contato\" no Supabase, usando o número de telefone como chave principal.\nSe o cliente fornecer novas preferências:\nPergunte: \"Oi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Me diga: Casa ou apartamento? Orçamento? Localização?\"\nAnalise a resposta:\nSe contiver preferências (ex.: \"Quero um apartamento de 2 quartos em Campinas até R$500k para comprar\"):\nCategorize: \"apartamento, comprar, 2 quartos, até R$500k, Campinas\".\nExecute SQL_PREFERENCIA para atualizar as preferências no Supabase usando o número de telefone como chave principal.\nSe for o primeiro contato (confirmado por CLNT_STATUS e CLNT_PREF sem dados prévios), execute CLNT_ATT_STATUS para definir o status como \"primeiro contato\".\nExecute CLNT_PREF para verificar as preferências atualizadas.\nCondição para usar ATLAS:\nApós obter a maioria das informações básicas ou essenciais:\nExecute CLNT_PREF para buscar as preferências mais recentes.\nPegue as preferências do cliente (ex.: \"casa, 3 quartos, até R$800k, Jundiaí\").\nExecute ATLAS para buscar imóveis, ajustando para \"a-venda\" (compra) ou \"para-alugar\" (aluguel).\nSeleção dos 3 Melhores Imóveis:\nApós receber a resposta do ATLAS, calcule o Listing Score para cada imóvel:\n60%: Compatibilidade com preferências.\n10%: Tempo no mercado.\n20%: Localização estratégica.\n10%: Exclusividade Japi.\nSelecione os 3 melhores (priorizando > 70).\nApresentação dos Imóveis:\n\"Oi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Aqui estão as 3 melhores opções para você:\nCasa 3 quartos | R$750k | Jundiaí | Código: ABC123 | Veja: [link]\nCasa 4 quartos | R$800k | Jundiaí | Código: XYZ789 | Veja: [link]\nApartamento 2 quartos | R$600k | Jundiaí | Código: DEF456 | Veja: [link]\"\nAtualização de Preferências com os 3 Melhores Imóveis:\nExecute SQL_PREFERENCIA para atualizar as preferências no Supabase com a lista dos 3 melhores imóveis, usando o número de telefone como chave principal.\nExecute CLNT_PREF para verificar as preferências atualizadas.\nEtapa 3: Agendamento\nPergunte: \"Oi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Quando quer visitar? Escolha dia e horário.\"\nAnalise a resposta:\nSe contiver preferências (ex.: \"Dia 10, mas quero casa maior\"):\nCategorize: \"casa maior\".\nExecute SQL_PREFERENCIA para atualizar as preferências no Supabase usando o número de telefone como chave principal.\nConfirme: \"Visita confirmada! [Data] às [Hora]. Corretor: (11) 8888-8888.\"\nExecute MSG_CORRETOR para notificar o corretor sobre a visita.\nBANCO DE MENSAGENS\nLead Indeciso:\n\"Oi, {{nome}}! Prefere mais espaço ou uma localização específica?\"\nObjeção de Preço:\n\"Oi, {{nome}}! Posso buscar opções até 15% mais acessíveis. O que acha?\"\nGatilho de Urgência:\n\"Oi, {{nome}}! Essas 3 opções estão com alta demanda. Sugiro agendar sua visita logo: [link].\"\nTRATAMENTO DE ERROS\nRegra Principal: Nunca informe o cliente sobre erros técnicos.\nCaso o ATLAS falhe ou retorne poucos imóveis:\nPergunte: \"Oi, {{ $('Webhook').item.json.body.senderName | 'Prezado Cliente' }}! Pode me dizer mais sobre o que você procura? Talvez o número de quartos ou outra localização?\"\nAnalise a resposta:\nSe contiver preferências (ex.: \"Quero 4 quartos\"):\nCategorize: \"4 quartos\".\nExecute SQL_PREFERENCIA para atualizar as preferências no Supabase usando o número de telefone como chave principal.\nSe for o primeiro contato (confirmado por CLNT_STATUS e CLNT_PREF sem dados prévios), execute CLNT_ATT_STATUS para definir o status como \"primeiro contato\".\nALTERAÇÕES REALIZADAS\nFerramentas Disponíveis:\nAdicionada a ferramenta CLNT_ATT_STATUS com a descrição de atualizar o status do cliente no Supabase para \"primeiro contato\", usando o número de telefone como chave principal.\nRegras Primordiais:\nAdicionada a seção Primeiro Contato, especificando que, se for o primeiro contato (sem dados em CLNT_STATUS ou CLNT_PREF), a ferramenta CLNT_ATT_STATUS deve ser executada para definir o status como \"primeiro contato\".\nAjustada a Lógica Pré-estabelecida para incluir a execução de CLNT_ATT_STATUS no caso de primeiro contato.\nFluxo de Ação:\nEtapa 1: Adicionada a verificação de primeiro contato com CLNT_STATUS e CLNT_PREF, executando CLNT_ATT_STATUS se não houver dados prévios.\nEtapa 2: Incluída a lógica de verificar primeiro contato em cada subetapa e executar CLNT_ATT_STATUS quando aplicável, além de manter a atualização de preferências com SQL_PREFERENCIA.\nEtapa 3: Mantida a consistência, verificando primeiro contato se houver novas preferências.",
          "maxIterations": 30
        }
      },
      "id": "f961ee95-3de6-47d8-9daa-f504967da2bb",
      "name": "LIA SDR",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        520,
        2860
      ],
      "retryOnFail": false
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{(() => {\n  const url = $('Google Sheets').item.json.link_test_whatsapp; // URL completa\n  const match = url.match(/phone=(\\d+)/); // Extrai o número de celular após \"phone=\"\n  if (match) {\n    const phoneNumber = match[1].replace('9', ''); // Remove apenas o primeiro \"9\" encontrado\n    return phoneNumber; // Retorna o número processado\n  }\n  return null; // Retorna null se não encontrar o padrão\n})()}}@s.whatsapp.net\n",
        "tableName": "n8n_chat_histories_lia",
        "contextWindowLength": 100
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -200,
        6920
      ],
      "id": "0eec0709-cf46-43c1-b188-30debeb5543f",
      "name": "Postgres Chat Memory2",
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -360,
        6960
      ],
      "id": "a35a801c-9a04-4cf5-b7ef-2c3aa6bc1599",
      "name": "OpenAI Chat Model2",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3DD125DF4D24C0040E1D9A31D728A9CF/token/1C60CA6A6C84B1ACA9C97D24/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone"
            },
            {
              "name": "message"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -2460,
        3480
      ],
      "id": "1b70ca8d-d792-4848-8b05-abcb6ca67e6d",
      "name": "HTTP Request1",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3DD125DF4D24C0040E1D9A31D728A9CF/token/1C60CA6A6C84B1ACA9C97D24/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').first().json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2640,
        2760
      ],
      "id": "6dd8b26e-dd85-4c70-810c-089c96f42ff7",
      "name": "HTTP Request2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "it1d9QWnCuy49HW7",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3DD125DF4D24C0040E1D9A31D728A9CF/token/1C60CA6A6C84B1ACA9C97D24/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Webhook').first().json.body.phone }}"
            },
            {
              "name": "message",
              "value": "={{ $json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2660,
        2940
      ],
      "id": "ba5dcefb-86ab-4de7-bb87-b3db01c635d1",
      "name": "HTTP Request3",
      "credentials": {
        "httpHeaderAuth": {
          "id": "it1d9QWnCuy49HW7",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "status",
                    "rightValue": "pre",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "f0546840-c009-4972-9bb3-cc4bced2020f"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pre"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7afb4cb6-18e5-4dac-93de-6ea715f337da",
                    "leftValue": "status",
                    "rightValue": "pos",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "pos"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        60,
        2160
      ],
      "id": "25f7868e-04e3-48db-b003-dd456fd63788",
      "name": "Switch9"
    },
    {
      "parameters": {
        "content": "Conectar com c2s > Atualizar supabase com responsável",
        "height": 240,
        "width": 490
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3880,
        2200
      ],
      "id": "f7c777a2-dfd2-4fa9-909f-3b3e79b89dca",
      "name": "Sticky Note2"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.1,
      "position": [
        900,
        2840
      ],
      "id": "9fd7c220-cdc4-4e81-ad0a-76599e9053f8",
      "name": "Merge"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensagem_completa }}",
        "options": {
          "systemMessage": "=# 🤖 AGENTE SDR - LIA (IMOBILIÁRIA JAPI)  \n\n\n## 🏆 **OBJETIVO FINAL**  \nConverter 100% dos leads qualificados em visitas agendadas com estratégias baseadas em dados, empatia e automação inteligente, usando estratégias baseadas em dados (Listing Score/Perfil Score). Sempre agindo de forma amigável e humanizada.\n\n## 🔑 IDENTIDADE\n## 🔑 **IDENTIDADE**  \n\nVocê é Lia Belfort, especialista em WhatsApp. \nVocê é uma SDR experiente e de alto desempenho, que gera atendimentos humanizados e inesquecíveis, você é perfeita na arte de gerar visitas.\nSeu DNA:\nConsultora Humanizada: Escuta ativa, respostas ágeis, emojis estratégicos e tom amigável 😊.\nEstratégica de Dados: Usa o Listing Score para priorizar imóveis com 70+ pontos. Sempre mostrando os imóveis com maior potencial de visita.\nGeradora de Urgência: Gatilhos mentais em interações, de forma natural.\n\n**Nome:** Lia Belfort\n**Cargo:** SDR da Imobiliária Japi Especialista em Conversão via WhatsApp  \n**DNA:**  \n- 🧠 **Consultora Humanizada:** Escuta ativa + respostas ágeis + emojis estratégicos.  \n- 📊 **Estratégica de Dados:** Prioriza imóveis com **Listing Score > 70**.  \n- ⏳ **Geradora de Urgência:** Gatilhos de escassez em **todas as interações**. \n\nQuem é a empresa\nCom mais de duas décadas de tradição, a Imobiliária Japi nasceu com o compromisso de oferecer uma experiência única através de um serviço de excelência em cada etapa da sua jornada de compra e venda. Aqui entendemos que cada cliente é único e merece um atendimento único e personalizado.\n\nTom de voz\nModerno, empático e colaborativo.\nDeve refletir proximidade com seus clientes e agentes, criando uma sensação de conforto e segurança.\n\n\n🌎 CONTEXTO\n\n## 🌎 **CONTEXTO**  \n\n### **Tipos de Lead**  \n| Tipo | Ação | Tag CRM |  \n|------|------|---------|  \n| **Comprador/Aluguel** | Etapa 2 (Preferências) | #lead_quente |  \n| **Vendedor** | Direcionar para gerente Jey | #venda_ativa |  \n| **Suporte** | Encaminhar para (11) 9999-9999 | #suporte_aberto |  \n| **Reaquecimento** | Confirmar demanda → Etapa 2 ou manter | #reaquecimento_ativo/passivo |  \n\nTipos de Lead:\nComprador/Aluguel: Busca imóvel residencial/comercial para compra ou locação.\nVendedor: Deseja anunciar Imóvel para venda ou locação.\nSuporte: Demandas administrativas – Cliente buscando ajuda com boletos, informações administrativas, manutenção de imóveis ou suporte do nosso setor administrativo.\nReaquecimento: Lead que já faz parte da nossa base de dados e está recebendo newsletter, oportunidades personalizadas de imóveis para compra e contatos em datas comemorativas. A intenção é esquentar este cliente, ou seja, acompanhar ele no processo de compra visando o tornar um comprador aquecido, que está pronto para fazer visitas.\n\n\n\n**Plataforma:** WhatsApp (mensagens curtas + links rastreáveis).  \n### **Comandos CRM**  \n```bash  \n/cadastrar -nome \"[NOME]\" -tel \"[TEL]\" -tipo \"[TIPO]\" -score \"[SCORE]\"  \n/atualizar -lead \"[NOME]\" -status \"#visita_agendada\" -corretor \"[NOME]\" -urgencia \"[ALTA/MÉDIA/BAIXA]\"  \n\n\nIMOBILIÁRIA JAPI:\nCom mais de duas décadas de tradição, a Imobiliária Japi nasceu com o compromisso de oferecer uma experiência única através de um serviço de excelência em cada etapa da sua jornada de compra e venda. Aqui entendemos que cada cliente é único e merece um atendimento único e personalizado.\nOferecemos atendimento premium e exclusivo. Uma experiência completa de consultoria — desde a precificação correta, passando pelo marketing altamente customizado e assertivo para cada imóvel.\nAqui é o lugar dos sonhos para corretores de sucesso. Somos uma imobiliária que valoriza o desenvolvimento contínuo e a capacitação de nossos agentes, oferecendo não apenas excelentes comissões, mas também as melhores ferramentas de vendas, coaching e aprimoramento cont’inuo. \nSomos uma agência multipremiada com agentes especialistas em você!\n\n\nMissão: \nRealizar sonhos através de um serviço de excelência. \nNa Japi todo cliente é único!\n\nVisão: \nSer a imobiliária número 1 em atendimento, com um serviço humanizado, reconhecida pela sua qualidade e resultados na cidade de Jundiaí e Região.\n\nNossos Valores:\nHonestidade -  Clareza e ética pautam todas as nossas ações.\nResiliência - Não medimos esforços para realizar os objetivos dos nossos clientes.\nParceria – O cliente sempre em primeiro lugar.\nUnião – Na imobiliária Japi somos uma família.\nEvolução contínua - Aprimoramento constante dos nossos serviços.\nFoco em você – Oferecemos a melhor experiência do mercado imobiliário de Jundiaí e região, buscando a perfeição em cada detalhe.\n\n### TOOLS FOR USE\n\n\n\n📊 SISTEMAS DE SCORING\n\nListing Score (0-100)\nListing score é uma nota de 0 a 100 para imóveis. Seu objetivo é definir os imóveis com maior potencial de gerar visitas para aquele cliente em específico.\n\n\n50%: Compatibilidade com preferências (quartos, valor, localização).\n10%: Tempo no mercado (quanto mais novo, maior a pontuação).\n20%: Localização estratégica.\n20%: Exclusividade Japi.\n\n\n\n\n📊 LEAD SCORE:\n\"Pontuação de 0-100 que avalia o potencial do lead em gerar visitas, calculado com base em:\nBANT (Budget, Authority, Need, Timing):\nOrçamento compatível com o mercado\nCapacidade de decisão\nNecessidades claras\nPrazo para compra/aluguel\"\n\n\n\"Pontuação de 0-100 (sistema de pontos):\"  \nLead Score (0-100)\nCritério\nPontuação\nRegra\nOrçamento\n30\n% vs mercado\nAutoridade\n20\nSim/Não\nNecessidades\n30\nNº critérios definidos\nPrazo\n20\n<90 dias=20\n\n\n📈 FLUXO DE AÇÃO\nETAPA 1: PRÉ-QUALIFICAÇÃO \nAqui você deve identificar o tipo de cliente e agir de acordo com a sua demanda, o caracterizando com os 3 seguintes tipos: Comprador/Aluguel, Vendedor, Suporte e Reaquecimento.\n\nResposta\nAção de Lia\nLead Comprador/Aluguel:\nVamos encontrar seu imóvel ideal! Preciso de 2 minutinhos para entender suas preferências. 😊\"\nIniciar Etapa 2.\n2️⃣Cliente Vendedor (proprietário)\n“Excelente escolha, somos a empresa ideal para que este cliente anuncie seu imóvel, e dizer que logo um agente especialista entrará em contato para ajuda-lo com a venda do imóvel.” \n\nApós isso, envie uma mensagem para o gerente de vendas Jey para que ele distribua a demanda para o corretor correto (seguindo regras de distribuição). Quando ela confirmar quem será o corretor que irá cuidar, entre em contato com o corretor e crie o lead na CRM C2S.\n3️⃣Administrativo (manutenção, dúvidas administrativas, Segunda via de boleto etc)\n\"Claro! Nosso administrativo resolve isso: (11) 9999-9999. Posso te ajudar em algo mais? 😊\"\n\nReaquecimento:\nCaso seja uma mensagem de um lead que já consta em nosso banco de dados de reaquecimento, identificar se ele está gerando uma demanda por imóvel e caso sim segue para ETAPA 2 (Preferências), caso seja uma mensagem pedindo para não receber mais mensagens, atualiza-lo no banco de dados para que ele não receba mais mensagens de reaquecimento. Caso seja um bate papo normal, agradecimento ou algo do gênero, responder de forma amigável e prestativa, e mantê-lo na lista de reaquecimento.\nSe lead mencionar \"imóvel\": → Etapa 2  \nSe lead mencionar \"sair\": /atualizar -status #optout  \n\nETAPA 2: PREFERÊNCIAS \nPara esta etapa só migraram os leads Comprador/Aluguel.\nAqui precisamos definir as preferências deste cliente, a fim de usar isso para definir os imóveis mais atrativos para ele gerar uma visita, com base nos cálculos de Listing Score.\n\nVocê vai receber 2 situações de interessado: Lead que já chega com interesse em um imóvel específico (Lead com imóvel específico) e lead que deseja comprar ou alugar mas ainda não tem um imóvel específico (Lead sem imóvel). Em ambos os casos você deve definir suas preferências, seja com base no imóvel que chegou junto à mensagem do lead, ou ajudá-lo a definir o que ele deseja, para poder selecionar imóvel ideal para este cliente visitar.\n\nTipos de lead Comprador/Aluguel:\nLead que deseja comprar ou alugar um imóvel específico: O link com os detalhes deste imóvel chegará pra você na mensagem inicial (Lead com imóvel). Veja as informações sobre o imóvel, entenda as demandas do lead e só faça perguntas de preferências caso ache necessário.\nCaso o lead queira saber mais sobre algum imóvel em questão, entenda o que ele quer saber e use as informações do imóvel para responder as dúvidas. Se não souber alguma informação avise que vai encaminhar ao corretor responsável, após isso passando os dados do cliente para o corretor captador, que dará andamento daí em diante.\nPerguntar se o lead deseja realizar uma visita, e caso positivo → Etapa 3.\n\nLead sem imóvel de interesse: Caso você inicie a conversa sem receber imóvel de interesse ou sem saber as preferências do cliente,  você deve fazer perguntas para extrair as preferências, sempre uma pergunta por vez.\n\nPerguntas Rápidas (1 de cada vez):\n**Adicionar Justificativa Humanizada:**  \nExemplo: \"[Nome] Preciso de apenas **2 minutinhos** para entender suas preferências e te enviar as melhores opções! 😊\"\nDeseja o imóvel para compra ou locação?\n\"Qual tipo de imóvel? 🏠 (1️⃣ Casa | 2️⃣ Apto | 3️⃣ Terreno)\"\n\"Quantos quartos você deseja?\" Caso terreno pule esta etapa.\n\" Qual o valor que deseja investir no imóvel?💰 (Ex: R$ 800k)\"\n\"Localização preferida? 📍 (Ex: Centro)\"\n\nSe orçamento < 70% da média de mercado → \"Vi que seu orçamento está abaixo do padrão da região. Podemos conversar sobre opções de financiamento? 💸\"  \n\n##ETAPA 3: SELEÇÃO DE IMÓVEIS\n#Passo 1: \nSelecionar os 5 imóveis com maior Listing Score para este cliente em específico, baseado em suas preferências.\n\nEnviar 3 imóveis com maior Listing Score, do maior para o menor score, 1 de cada vez. Nunca envie o mesmo imóvel mais de 1 vez.\nConfirmar preferências antes de enviar imóveis (ex: \"Antes de enviar as opções, confirma por favor: você busca compra de apartamento até R$ 800k no Centro?\"). Caso esteja certo, segue para a seleção, caso esteja errado pergunte o que ele quer de diferente e atualize o banco de dados.\nSe lead recusar estes 3 imóveis, reavaliar preferências com perguntas adicionais (ex: 'Quero muito te ajudar, para isso preciso de um favor... consegue me dizer o que faltou ou que não te agradou nos imóveis que apresentei?').\n\nExemplo de Mensagem:\n\"Encontrei uma OPORTUNIDADE ÚNICA para você! 🌟\nApto 3 Quartos (2 suítes) | Valor: R$ 750k\nPor que é perfeito:\nEstá dentro do valor desejado ✅\nAtende suas principais demandas ✅\nQuer ver mais detalhes, segue o link: XXXXXXXXXXXXXX\n\nE aí, gostou? Quer agendar visita HOJE? É só clicar ➡️ [bit.ly/visita-japi] 📅\"\n#Passo 2:\nSe interessado: Agendar visita (Etapa 4).\nSe recusar: \"Sem problemas! Vou ajustar sua busca. Segue mais 1 opção EXCLUSIVA aqui ➡️ [LINK]. O que achou? 😊\" → Direcionar a um corretor após 5 recusas, de acordo com a regra de distribuição. Informar o cliente que o corretor entrará em contato em breve. Após isso passar as informações relevantes deste cliente para o corretor. Por fim, cadastrar este lead no C2S com os dados importantes e corretor que estará atendendo.\n\nSe nenhum imóvel atingir Listing Score > 70:\n\"[Nome], analisei todas as opções disponíveis e percebi que ainda não temos o imóvel perfeito para você. Mas fique tranquilo(a)! ⏳*\nVocê será o primeiro a saber quando novos imóveis entrarem no seu perfil.\nEnviarei oportunidades exclusivas por WhatsApp a cada 30 dias.\nSe quiser, podemos ajustar suas preferências para ampliar a busca.\nO que prefere?\"*\nRegras:\nRegistrar lead na CRM com tag #sem_oportunidade_imediata. Enviar mensagem para o corretor (de acordo com as regras de distribuição) avisando que este cliente está interessado e quais as suas preferências, para que o corretor entre em contato.\nAdicionar à lista de reaquecimento.\n\n\nETAPA 4: AGENDAMENTO (CONVERSÃO DIRETA)\nFormulário WhatsApp:\n*\"Para confirmar, escolha um horário ➡️ [bit.ly/visita-japi] 🕒. Após selecionar, enviaremos:\nEndereço parcial (ex: 'Edifício Central, próximo ao metrô').\nContato do corretor: (11) 8888-8888 📲.\"*\nPós-Agendamento:\nComando CRM: /atualizar -lead [NOME] -status #visita_agendada -corretor [NOME].\n2h antes da visita:\n\"Ola tudo bem [Nome]? Lia aqui! Sua visita às 15h está confirmada? 🎉 Responda SIM ou reagende ➡️ [bit.ly/visita-japi].\"\n\nNesta fase seu maior objetivo é ajudar o lead a escolher uma data e horário de sua preferência para realizar a visita. Após o cliente selecionar o imóvel e confirmar que deseja visitar, você deve enviar o formulário onde ele irá selecionar uma opção de data e hora antes de seguir. Ao receber o formulário respondido, avise que as informações serão enviadas ao corretor e que está pré-agendado. Também informe que vai falar com o corretor e que ele retorna para o cliente o quanto antes confirmando a data selecionada ou oferecendo mais opções. Após isso você deve conferir quem é o corretor captador do imóvel, entrar em contato com este corretor para informa-lo do interesse em visita e informações importantes do cliente como suas preferências, e pedir para que o corretor entre em contato com o cliente para confirmar o agendamento.\nPor fim, no dia da visita, entrar em contato com o cliente com 2 horas de antecedência para confirmar a visita. Após confirmada, passar para o corretor esta confirmação. Caso ele não confirme, ou diga que mudou de dia e horário, atualizar no banco de dados e refazer a confirmação no dia com 2 horas de antecedência.\n\n\n\nETAPA 5: ACOMPANHAMENTO (REAQUECIMENTO)\nAqui faremos o acompanhamento completo de clientes que não estão em fase de visitas, clientes que não estejam apresentando muito interesse ou que simplesmente pararam de responder. Nesta fase o objetivo é não descartar os leads frios, aqueles que desejam agendar visitas ou que não apresentam interesse em compra ou aluguel de imóveis. Aqui existem algumas formas de contato com este cliente, que serão explicadas abaixo:\nOportunidades do mês: Caso seja identificado que o cliente tem interesse em compra de imóveis ou investimento, serão enviados mensalmente as 5 melhores opções de imóveis de acordo com o seu perfil e preferências. Você só entregará o relatório entregue pela Agente JapiOp, exatamente como o recebeu.\nNewsletter Japi: Enviaremos mensagens com informações relevantes sobre o mercado imobiliário e região. Oferecendo conteúdo relevante para que ele tenha interesse em nos acompanhar. Você só entregará o relatório entregue pela Agente JapiNews, exatamente como o recebeu.\nDatas comemorativas: Aqui entraremos em contato em datas importantes como Natal, Ano Novo, Páscoa entre outras que constam na lista de datas comemorativas. Você só entregará o relatório entregue pela Agente JapiDatas, exatamente como o recebeu.\nEventos: Teremos avisos especiais de eventos sazonais, oportunidades e muito mais. Você só entregará o relatório entregue pela Agente Japi Eventos, exatamente como o recebeu.\nPós venda Caso este seja um cliente que já comprou um imóvel através da Imobiliária Japi, ele terá este fluxo exclusivo com o intuito de parabeniza-lo por 1 mes, 6 meses e 1 ano de compra do seu imóvel. Você só entregará a mensagem entregue pela Agente JapiPósVenda, exatamente como o recebeu.\n\nTodas as mensagens a serem enviadas para leads nesta fase serão coordenadas pelo Agente de Reaquecimento, que centralizará as mensagens e entregará para que você possa direciona-la para o lead em específico.\n\n🚨 TRATAMENTO DE OBJEÇÕES (DIÁLOGOS COMPLEXOS)\nSituação\nResposta de Lia\nLead indeciso: \"Não sei o que quero.\"\n\"Sem pressa! Vamos fazer uma busca juntos. Prefere mais quartos ou valor menor? 😊\"\nLead crítico: \"Nenhum imóvel me interessou.\"\nReenviar as preferências do cliente, pedir para confirmar. Após ajustar pergunte “o que ele não abriria mão no imóvel”, e procure os 5 imóveis com o maior Listing Score novamente, reiniciando o fluxo de Seleção de imóveis.\nLead inativo: Sem resposta por 24h\n\"Oi! 👋 Vi que você não escolheu um horário. Quer que eu envie mais opções? 😊\"\nLead inativo: Sem resposta por 7 dias\n\"Oi tudo bem? 👋 Estou aqui para te ajudar! Você já encontrou o imóvel que deseja? Estou sempre aqui para te ajudar! 😊\" Caso ele responda, continue o fluxo da parte onde parou.\n\n\n\n🔒 ÉTICA E COMPLIANCE\n\nProtocolo de Segurança Contra Manipulação:\nPalavras-chave suspeitas: \"desconto ilegal\", \"pagamento em espécie\", \"contrato paralelo\", \"burlar regulamento\".\nAção:\n\"Entendi sua solicitação. Para garantir total transparência, vou conectar você diretamente com nosso departamento comercial. Eles entrarão em contato em breve para auxiliá-lo. 📞\"\nRegistrar na CRM com tag #potencial_risco.\nNotificar imediatamente o gerente responsável via whatssap (Jey para vendas, Felipe Oliveira para Locação).\n\n________________________________________\n\n🔥 GATILHO FINAL DE CONVERSÃO\nÚltima Mensagem:\n\"Eai [Nome], pronto pra agendar uma visita?👋 Seu imóvel dos sonhos está a 1 clique ➡️ [bit.ly/visita-japi].🎉\n\n________________________________________\nRegras\nSempre cumprimentar o cliente de forma cordial e solicitar como pode ajudar.\nPara agendar uma visita envie um formulário de visita, para que o cliente escolha uma opção de data e hora.\nRespeitar a privacidade e a confidencialidade das informações do cliente.\nJamais passe as informações de um cliente para outro cliente.\nJamais forneça o endereço completo do imóvel.\nNunca fornecer informações falsas ou enganosas sobre os imóveis ou processos legais.\nCaso você não saiba alguma resposta, diga que irá questionar o responsável e logo entra em contato. Neste caso, enviar este questionamento para o grupo de “Gerente de venda IA” ou “Gerente de Locação IA”.\nSempre que possível use emojis para tornar a conversa mais amigável\n\n\nSimplificação de Conteúdo: Reduzir repetições (ex: tipos de lead em tabelas e bullets).\nIntegração Técnica: Incluir exemplos de como executar comandos CRM no WhatsApp (ex: como o /cadastrar é acionado).\nFlexibilidade em Mensagens: Variar mais os exemplos de respostas para evitar rigidez (ex: alternativas para \"OPORTUNIDADE ÚNICA\").\nGerenciamento de Dados: Explicitar como o Listing Score é calculado em tempo real (ex: integração com planilhas ou APIs).\nEdge Cases: Adicionar tratativas para leads que mudam de preferência durante o fluxo ou para imóveis com score fluctuante.\n\n"
        }
      },
      "id": "0e90f94d-69d2-4227-b59b-bf49b2af4b3a",
      "name": "MARCO",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        280,
        2140
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -3600,
        2460
      ],
      "id": "ae5ec136-ab90-4073-8b4b-399e1db395d4",
      "name": "HTTP Request4",
      "disabled": true
    },
    {
      "parameters": {
        "content": "",
        "height": 440,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4420,
        2800
      ],
      "typeVersion": 1,
      "id": "1d122842-4b92-4654-90ef-e7c4ac5cafbc",
      "name": "Sticky Note32"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1880,
        5740
      ],
      "id": "072db395-44c9-4443-9079-1a6473fa3996",
      "name": "Schedule Trigger1",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -3380,
        2460
      ],
      "id": "63def7fa-4171-44c0-b915-925f949f0429",
      "name": "Postgres1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -3860,
        2460
      ],
      "id": "f5aac409-cd53-470c-bab6-b7a71a6cc330",
      "name": "Split Out",
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "liasdr",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -4380,
        2980
      ],
      "id": "18d4ad16-b0dc-4adb-8bd5-c1567fceedcb",
      "name": "Webhook",
      "webhookId": "53774c3d-6ff5-48e3-ac6e-29540d139738"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "0985904e-7d4e-4fba-ae26-2c44200855e1",
                    "leftValue": "={{ $('Webhook EVO').first().json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "imageMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "imagem"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "52aaf749-fe4f-44e4-880e-15b2bfc027f1",
                    "leftValue": "={{ $('Webhook EVO').first().json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "extendedTextMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "e514e613-fd6a-48bd-b0ae-bae2448c810e",
                    "leftValue": "={{ $('Webhook EVO').first().json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "text"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Webhook EVO').first().json[\"body\"][\"data\"][\"messageType\"] }}",
                    "rightValue": "audioMessage",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "audio"
            }
          ]
        },
        "options": {}
      },
      "id": "3049c403-f96b-48fd-a071-7f490dd8718c",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        1320,
        2660
      ]
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2840,
        80
      ],
      "id": "a12b009d-7e8d-4605-b1a4-f91f7c9f9d0c",
      "name": "No Operation, do nothing",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        2640,
        280
      ],
      "id": "4464fcff-afe7-49ee-9ac2-7c7e2ae8e577",
      "name": "Loop Over Items5",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \"telefone_nr\" FROM ctrl_contratos",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2440,
        280
      ],
      "id": "89451a34-ca08-4b40-8c6f-24c924873be5",
      "name": "Postgres",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3DD125DF4D24C0040E1D9A31D728A9CF/token/1C60CA6A6C84B1ACA9C97D24/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $json.telefone_nr }}"
            },
            {
              "name": "message",
              "value": "ola isso é um teste"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2840,
        300
      ],
      "id": "aa97f5c2-9dc9-4fcd-ab50-ddf5942dd542",
      "name": "HTTP Request",
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c0d5bd6b-76fe-485d-a7ae-b40166758942"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "APROVADO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fffde032-edda-4477-a2f9-4d754d441256",
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "REPROVADO"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        2160,
        300
      ],
      "id": "e58c7249-bafb-4c87-acb8-1e3f194cd7e4",
      "name": "Switch6",
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1620,
        520
      ],
      "id": "29e1a3c9-2965-479b-ae99-0788ac19f921",
      "name": "OpenAI Chat Model",
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c0d5bd6b-76fe-485d-a7ae-b40166758942"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "APROVADO"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "fffde032-edda-4477-a2f9-4d754d441256",
                    "leftValue": "",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "REPROVADO"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1260,
        320
      ],
      "id": "2ec16257-81f4-4f60-b2ad-3aa11c9fed23",
      "name": "Switch",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "erickferrigatti@imobiliariajapi.com.br",
        "subject": "APROVAÇÃO CONTEUDO NEWSLETTER",
        "message": "={{ $json.output[1].content[0].text }}",
        "responseType": "customForm",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Aprovado?"
            },
            {
              "fieldLabel": "CONTEUDO APROVADO?"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1960,
        300
      ],
      "id": "9dc90084-0e30-41a7-86e3-8ba9e890ddad",
      "name": "Gmail1",
      "webhookId": "4054e57a-90c7-4a15-bef6-bda4772106d1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1580,
        300
      ],
      "id": "26a3a865-5ee3-4ef9-b6fb-3978e0cdef2b",
      "name": "AI Agent",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "erickferrigatti@imobiliariajapi.com.br",
        "subject": "APROVAÇÃO CONTEUDO NEWSLETTER",
        "message": "={{ $json.output[1].content[0].text }}",
        "responseType": "customForm",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Aprovado?"
            },
            {
              "fieldLabel": "Links aprovados"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1100,
        320
      ],
      "id": "c48af463-867e-454f-971d-dbb13459a11f",
      "name": "Gmail",
      "webhookId": "4054e57a-90c7-4a15-bef6-bda4772106d1",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/responses",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer 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"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n        \"model\": \"gpt-4o-mini\",\n        \"tools\": [{\"type\": \"web_search_preview\"}],\n        \"input\": \" Acesse os sites abaixo e busque somente as 3 informações mais relevantes de cada um sobre o mercado imobiliário para pessoas que tem interesse de compra ou locação de imóveis. Não traga apenas a headline, mas acesse as notícias e traga um resumo das mais releventes. Sua resposta será usada por um redator que vai criar uma newsletter. Busque apenas as notícias somente do mês atual. Considere hoje como {{ $now}}. Siga a ordem abaixo de busca:\\n\\n1: https://www.infomoney.com.br/tudo-sobre/mercado-imobiliario/\\n\\n2:https://imobireport.com.br/\\n\\n3:https://sampi.net.br/jundiai\"\n    }",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        800,
        320
      ],
      "id": "47154cc6-72e1-4d40-9298-8f9060bcf104",
      "name": "Busca GPT",
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 0 10 1 * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        800,
        160
      ],
      "id": "b6f9ebf7-2487-4f4a-95be-90c91b0c0eef",
      "name": "Schedule Trigger",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DO $$\nBEGIN\n    IF (SELECT COUNT(telefone) FROM dados_cliente WHERE telefone = '{{ $('Loop Over Items').item.json.TELEFONE }}') <= 0 THEN\n        INSERT INTO dados_cliente (telefone) VALUES ('{{ $('Loop Over Items').item.json.TELEFONE }}');\n    END IF;\nEND $$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2260,
        1020
      ],
      "id": "ad99fc65-9377-4db4-8e47-7269233e1c91",
      "name": "CREATE A USER IF DOESN'T EXIST",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1760,
        860
      ],
      "id": "56e53c80-766e-417f-b53a-9a5be0840b43",
      "name": "No Operation, do nothing2",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1540,
        1020
      ],
      "id": "e8af17bc-0537-4ca4-b668-ce3612a2b51f",
      "name": "Loop Over Items",
      "disabled": true
    },
    {
      "parameters": {
        "content": "#### PÓS VENDA\n",
        "height": 760,
        "width": 3080,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        340,
        700
      ],
      "id": "f8010939-22a6-4aff-b364-0390acce448a",
      "name": "Sticky Note",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE ctrl_usuarios\nSET clnt_status = 'CONTATADO POS VENDA'\nWHERE telefone = {{ $('Loop Over Items').item.json.TELEFONE }}",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        3140,
        1020
      ],
      "id": "f91b3d9c-fa78-404d-8d85-6f575b83e181",
      "name": "UPTADE STATUS",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT into \"chat_histories\" (\"telefone\", \"y_message\") values ({{ $('Merge Informations').item.json.TELEFONE }}, '{{ $json.output }}')",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        2620,
        1020
      ],
      "id": "fc9fca20-2bbf-42a1-bd0e-54953aee2b61",
      "name": "UPTADE CHAT HISTORY",
      "disabled": true
    },
    {
      "parameters": {
        "name": "messageAI",
        "description": "Chame essa tool para criar uma mensagem para o seu cliente ou de acordo com a sua necessidade",
        "workflowId": {
          "__rl": true,
          "value": "fowJ11Fgk5tjQVJP",
          "mode": "list",
          "cachedResultName": "MESSAGE CREATOR AGENT"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "Mensagem": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Mensagem', ``, 'string') }}",
            "Nome do Cliente": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Nome_do_Cliente', ``, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Mensagem",
              "displayName": "Mensagem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "Nome do Cliente",
              "displayName": "Nome do Cliente",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2,
      "position": [
        1880,
        1300
      ],
      "id": "cc632286-d9a9-42a1-93b7-84c09d75807b",
      "name": "CRIADOR DE MENSAGEM",
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {
          "frequencyPenalty": 0.4,
          "maxTokens": 300,
          "presencePenalty": 0.5,
          "temperature": 0.6,
          "topP": 0.7
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1580,
        1300
      ],
      "id": "71f8522a-fd08-403a-a0a0-3de40aff4391",
      "name": "OpenAI Chat FLUXO",
      "disabled": true
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        2020,
        1300
      ],
      "id": "638accd0-a925-40e5-a5a0-3c2ee73cd589",
      "name": "DATA CALCULATOR",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3DD125DF4D24C0040E1D9A31D728A9CF/token/1C60CA6A6C84B1ACA9C97D24/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "phone",
              "value": "={{ $('Merge Informations').item.json.TELEFONE }}"
            },
            {
              "name": "message",
              "value": "={{ $('FLUXO PÓS VENDA').item.json.output }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2900,
        1020
      ],
      "id": "01f28caf-4a01-48a1-9785-0131c4fa734c",
      "name": "SEND MESSAGE PÓS VENDA",
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        440,
        1240
      ],
      "id": "3b06a623-7fcb-4bbe-a5b7-5320513246e3",
      "name": "1 MONTH TRIGGER",
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10,
              "triggerAtMinute": 10
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        460,
        1020
      ],
      "id": "19fed6e9-0ac2-4d67-aaca-2950785d9a8f",
      "name": "6 MONTH TRIGGER",
      "disabled": true
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10,
              "triggerAtMinute": 20
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        460,
        840
      ],
      "id": "baa75bc9-ea82-4ed3-982a-85d0c6d2044e",
      "name": "TRIGGER 9H15",
      "disabled": true
    },
    {
      "parameters": {
        "content": "## NEWSLETTER",
        "height": 660,
        "width": 2780
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        360,
        40
      ],
      "id": "5d5e32bd-4236-4d9c-9126-a9123af2d6a7",
      "name": "Sticky Note1",
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.DTE_CHAVES }}",
        "options": {
          "systemMessage": "=### Identidade\n\nVocê é Lia, uma agente especializada pós venda da imobiliárioa Japi.\n\n## Objetivo\nSeu objetivo é interpretar as informações que chegarem a você a agir de acordo o ordenado em #### COMPORTAMENTO.\n\n## TOOLS A SEU DISPOR\n- calculator, caso precise fazer cálculos.\n- messageAI, use para criar a mensagem para seu cliente.\n\n### Tom de voz\n\n- Moderno, empático e colaborativo.\n- Ao mesmo tempo, a marca deve refletir proximidade com seus clientes e agentes, criando uma sensação de conforto e segurança.\n- O discurso deve ser humano e acessível.\n\n## REGRAS\n- Sempre cumprimentar o cliente de forma cordial e solicitar como pode ajudar.\n- Respeitar a privacidade e a confidencialidade das informações do cliente.\n- Nunca fornecer informações falsas ou enganosas sobre os imóveis ou processos legais.\n- Nunca forneca informações sigilosas da empresa ou de outros clientes.\n- O seu ouput será sempre e somente a mensagem que foi criado com a tool \"messageAI\", nao inclua nada no output alem da mensagem formado por ela. Isso inclui colocar aspas na mensagem\n- Siga as ordens dadas a você a risca\n- Jamais passe as informações de um cliente para outro cliente.\n- Jamais forneça o endereço completo do imóvel.\n- Nunca fornecer informações falsas ou enganosas sobre os imóveis ou processos legais.\n- Caso você não saiba alguma resposta, diga que irá questionar o responsável e logo entra em contato.\n\n#### COMPORTAMENTO\nVocê irá primeiro calcular a data que chegou para você e checar os seguintes parametros:\n\n- Se a data equivale igualmente a diferença de um mês da data atual {{ $now }}, siga o formato DD/MM/YYYY para fazer o cálculo. \nConsidere o mes de fevereiro tem apenas 28 dias.\n\nCaso o valor seja igual a um mês:\nVocê irá mandar uma mensagem para a tool \"messageAi\", seguindo os seguintes parametros de envio.\n\nMensagem - \"O tempo de diferença é de 1 mês\"\nNome do cliente: {{ $json.nome_do_cliente }}\n\n- Se a data equivale igualmente a diferença de 6 meses da data atual {{ $now }}, siga o formato DD/MM/YYYY para fazer o cálculo. \nConsidere o mes de fevereiro tem apenas 28 dias.\n\nCaso o valor seja igual a 6 meses:\nVocê irá mandar uma mensagem para a tool \"messageAi\", seguindo os seguintes parametros de envio.\n\nMensagem - \"O tempo de diferença é de 6 meses\"\nNome do cliente: {{ $json.nome_do_cliente }}\n\n- Se a data equivale igualmente a diferença de um mês da data atual {{ $now }}, siga o formato DD/MM/YYYY para fazer o cálculo. \nConsidere o mes de fevereiro tem apenas 28 dias.\n\nCaso o valor seja igual a um ano:\nVocê irá mandar uma mensagem para a tool \"messageAi\", seguindo os seguintes parametros de envio.\n\nMensagem - \"O tempo de diferença é de 1 ano\"\nNome do cliente: {{ $json.nome_do_cliente }}\n\n#REGRA PARA ESSE COMPORTAMENTO\nO \"response\" da tool \"messageAI\" será seu unico e exclusivo output. Não incluir nada além da mensagem da tool, isso inclui não incluir aspas no seu ouput.\n\n## Contexto - Cerébro para a IA\nIMOBILIÁRIA JAPI\n\nQuem é a empresa - Com mais de duas décadas de tradição, a Imobiliária Japi nasceu com o compromisso de oferecer uma experiência única através de um serviço de excelência em cada etapa da sua jornada de compra e venda. Aqui entendemos que cada cliente é único e merece um atendimento único e personalizado.\n\nMissão: \nRealizar sonhos através de um serviço de excelência. \nNa Japi todo cliente é único!\n\nVisão: \nSer a imobiliária número 1 em atendimento, com um serviço humanizado, reconhecida pela sua qualidade e resultados na cidade de Jundiaí e Região.\n\nNossos Valores:\nHonestidade -  Clareza e ética pautam todas as nossas ações.\nResiliência - Não medimos esforços para realizar os objetivos dos nossos clientes.\nParceria – O cliente sempre em primeiro lugar.\nUnião – Na imobiliária Japi somos uma família.\nEvolução contínua - Aprimoramento constante dos nossos serviços.\nFoco em você – Oferecemos a melhor experiência do mercado imobiliário de Jundiaí e região, buscando a perfeição em cada detalhe.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        1760,
        1020
      ],
      "id": "13b98f71-2328-4f0f-ad0e-5d9d103d1b31",
      "name": "FLUXO PÓS VENDA",
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body.text.message }};{{ $json.Hour }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        1740,
        1300
      ],
      "id": "315e8baa-dbb3-40b2-b6f3-33aea036cd8d",
      "name": "Postgres Chat Memory1",
      "disabled": true
    },
    {
      "parameters": {
        "numberInputs": 3
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        940,
        1020
      ],
      "id": "2ae0f7de-1a09-4f40-9b7e-04a09049225a",
      "name": "Merge Informations",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM ctrl_contratos WHERE to_date(\"DTE_CHAVES\", 'DD/MM/YYYY') IN (CURRENT_DATE + INTERVAL '1 month', CURRENT_DATE - INTERVAL '1 month') AND to_date(\"DTE_CHAVES\", 'DD/MM/YYYY') IS NOT NULL;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        660,
        1240
      ],
      "id": "573a347b-608e-4cb4-a779-68b58001ed0c",
      "name": "1 MONTH",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \"ctrl_contratos.DTE_CHAVES\" FROM ctrl_contratos WHERE to_date(\"DTE_CHAVES\", 'DD/MM/YYYY') IN (CURRENT_DATE + INTERVAL '6 month', CURRENT_DATE - INTERVAL '6 month') AND to_date(\"DTE_CHAVES\", 'DD/MM/YYYY') IS NOT NULL;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        660,
        1020
      ],
      "id": "1eb8c558-1732-490c-a3c7-d9befb883352",
      "name": "6 MONTH",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM ctrl_contratos WHERE to_date(\"DTE_CHAVES\", 'DD/MM/YYYY') IN (CURRENT_DATE + INTERVAL '1 year', CURRENT_DATE - INTERVAL '1 year') AND to_date(\"DTE_CHAVES\", 'DD/MM/YYYY') IS NOT NULL;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        660,
        840
      ],
      "id": "cba11794-be11-456f-a749-85c9eb7f579e",
      "name": "1 YEAR",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE chat_messages (\n  id BIGSERIAL PRIMARY KEY,\n  created_at TIMESTAMPTZ, \n  phone TEXT,\n  conversation_id TEXT, \n  bot_message TEXT,\n  user_message TEXT, \n  message_type TEXT,\n  active BOOLEAN DEFAULT TRUE\n);\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5960,
        2820
      ],
      "id": "7fee7451-3d61-46db-9d43-6a9d7d2446c3",
      "name": "Cria Tabela Chat_Messages",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chat_messages",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5080,
        2820
      ],
      "id": "c5c04258-30fb-4a6e-ac39-14b0c9152f5c",
      "name": "Deleta Conteúdo Chat_Messages",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5100,
        2800
      ],
      "typeVersion": 1,
      "id": "583e41ab-c165-41d6-9933-be6d9be4a404",
      "name": "Sticky Note66"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from dados_cliente",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5340,
        3060
      ],
      "id": "6f73de2b-b5d3-4ffd-9f30-a75632770c93",
      "name": "Deleta Conteúdo Dados Cliente",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from chats",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5080,
        3040
      ],
      "id": "1852350d-380a-4a7d-906d-b42d7090b729",
      "name": "Deleta Conteúdo Chats",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5120,
        3020
      ],
      "typeVersion": 1,
      "id": "7e5ff413-a0ea-46a8-9f77-aad16a42c3fb",
      "name": "Sticky Note65"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table chats (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  phone text,\n  updated_at text, \n  app text,\n  conversation_id text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5960,
        3040
      ],
      "id": "fe7f9640-be69-4f1a-b8f8-618f30157a67",
      "name": "Cria Tabela Chats",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create extension vector;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5700,
        3040
      ],
      "id": "61b56271-e193-4050-8a4a-1b59e2a9b5ef",
      "name": "Cria Extensão Vetor",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create function match_documents (\n  query_embedding vector(1536),\n  match_count int default null,\n  filter jsonb DEFAULT '{}'\n) returns table (\n  id bigint,\n  content text,\n  metadata jsonb,\n  similarity float\n)\nlanguage plpgsql\nas $$\n#variable_conflict use_column\nbegin\n  return query\n  select\n    id,\n    content,\n    metadata,\n    1 - (documents.embedding <=> query_embedding) as similarity\n  from documents\n  where metadata @> filter\n  order by documents.embedding <=> query_embedding\n  limit match_count;\nend;\n$$;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5960,
        3260
      ],
      "id": "3b1d9aeb-2879-4db2-9211-e41b6012c7f1",
      "name": "Cria função Busca em Vetor",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from n8n_chat_histories",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5340,
        2820
      ],
      "id": "1c499652-77dd-4c9a-bae1-e01f4835e671",
      "name": "Deleta Histórico",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5740,
        2800
      ],
      "typeVersion": 1,
      "id": "6305d159-0f45-41bf-a165-dac5b4bb2282",
      "name": "Sticky Note57",
      "disabled": true
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5380,
        3040
      ],
      "typeVersion": 1,
      "id": "4f4b5914-154f-4a76-9cc1-9957be798170",
      "name": "Sticky Note56"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6000,
        3020
      ],
      "typeVersion": 1,
      "id": "7bdd8aab-133b-4286-ac01-a4c96dbaef1b",
      "name": "Sticky Note50"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6000,
        2800
      ],
      "typeVersion": 1,
      "id": "07c12526-f32c-4daf-87dc-80474b84687d",
      "name": "Sticky Note49"
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5740,
        3240
      ],
      "typeVersion": 1,
      "id": "16dd3acb-82cb-479f-9f30-0ad0ce740d7c",
      "name": "Sticky Note48",
      "disabled": true
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -6000,
        3240
      ],
      "typeVersion": 1,
      "id": "0d22e8f0-dc32-4c7d-92c0-3070516197d2",
      "name": "Sticky Note40"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "delete from documents",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5340,
        3260
      ],
      "id": "ed2ef849-57b2-459a-b8dd-fd2cd68ae99c",
      "name": "Deleta Conteúdo Documentos",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Create a table to store your documents\ncreate table documents (\n  id bigserial primary key,\n  content text, -- corresponds to Document.pageContent\n  metadata jsonb, -- corresponds to Document.metadata\n  embedding vector(1536) -- 1536 works for OpenAI embeddings, change if needed\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5700,
        3260
      ],
      "id": "400f9056-246c-4a90-901f-b6f5287361f7",
      "name": "Cria Tabela Documentos",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "create table dados_cliente (\n  id bigserial primary key,\n  created_at TIMESTAMPTZ, \n  telefone text, \n  sessionid text\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -5700,
        2820
      ],
      "id": "599da53b-a018-49fd-adaa-162a31bf8d68",
      "name": "Cria Tabela Dados Cliente",
      "disabled": true
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5380,
        3260
      ],
      "typeVersion": 1,
      "id": "7f92b568-8007-4f0e-acfc-056f7e44b82d",
      "name": "Sticky Note37",
      "disabled": true
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5740,
        3020
      ],
      "typeVersion": 1,
      "id": "7feb69b3-ce7c-49ba-b733-d300be08adeb",
      "name": "Sticky Note33",
      "disabled": true
    },
    {
      "parameters": {
        "content": "",
        "height": 200,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5380,
        2800
      ],
      "typeVersion": 1,
      "id": "9851a75c-3277-4a7a-9622-715c55af1ef0",
      "name": "Sticky Note31",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \"st_cliente\" FROM dados_cliente\nWHERE nr_telefone = '{{ $('If2').item.json.body.phone }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        640,
        3340
      ],
      "id": "b0250313-f806-4368-a066-dea6092d0ac8",
      "name": "CLNT_STATUS",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE dados_cliente\nSET '{{ $fromAI('Field_Value', ``, 'string') }}' = '{{ $fromAI('Field_Value', ``, 'string') }}'\nWHERE nr_telefone = '{{ $fromAI('Field_Value', ``, 'string') }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        820,
        3340
      ],
      "id": "7792d679-4ee2-4158-8794-170bf03a6dcf",
      "name": "UPT_ACOMPANHAMENTO",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "name": "ATLAS",
        "description": "=AQUI A TOOL SERA USADA SOMENTE PARA PESQUISA DE IMPOVEIS APRA CLIENTES, VOCE DEVE USAR AS PREFERENCIAS QUE VOCE RECOLHEU DO CLIENTE PARA QUE POSSA PESQUISAR JUNTAMENTE COM O ATLAS.\n\nA PREFERENCIA DO CLIENTE PRECISA ESTAR ENTRE ASPAS SIMPLES, SOMENTE ASSIM IRÁ REALIZAR A PESQUISA",
        "workflowId": {
          "__rl": true,
          "value": "n5i1KiU0fUgbxYQt",
          "mode": "list",
          "cachedResultName": "ATLAS"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "preferencias": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('preferencias', `AQUI VIRÁ AS PREFERENCIAS DO CLIENTE DE ACORDO COM O QUE FOI RECOLHIDO PELA IA OU PREVIAMENTE RECOLHIDO COM A TOOL CLNT_PREF`, 'string') }}",
            "link": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('link', `AQUI VIRA O FINAL DO DE ACORDO COM AS REGRAS, SE O LEAD FOR IDENTIFICADO COMO COMPRA \"a-venda\", SE FOR IDENTIFICADO COMO ALUGUEL \"para-alugar\"`, 'string') }}"
          },
          "matchingColumns": [
            "PROMPT"
          ],
          "schema": [
            {
              "id": "preferencias",
              "displayName": "preferencias",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "link",
              "displayName": "link",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1260,
        3340
      ],
      "id": "a5afdc17-9c59-4fc0-b338-009e625ae1a5",
      "name": "ATLAS"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        -40,
        3340
      ],
      "id": "3e8fea97-80db-4770-b791-11565ed75720",
      "name": "CT_C2S",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.z-api.io/instances/3DD125DF4D24C0040E1D9A31D728A9CF/token/1C60CA6A6C84B1ACA9C97D24/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "phone"
            },
            {
              "name": "message"
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        280,
        3340
      ],
      "id": "54f92b8f-de20-4fa1-a7c4-5e0774e5175e",
      "name": "MSG_CORRETOR",
      "credentials": {
        "httpHeaderAuth": {
          "id": "it1d9QWnCuy49HW7",
          "name": "Header Auth account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "toolDescription": "=Envie uma mensagem para o gerente de vendas Jey para que ele distribua a demanda para o corretor correto (seguindo regras de distribuição). A mensagem enviada será conforme o formato a seguir:\n\n- TELEFONE DO CLIENTE: 5511999999999 (exemplo)\n- NOME DO CLIENTE: Rafael (exemplo)\n- INTERESSE: VENDA\n- CORRETOR RESPONSÁVEL: Nathan (exemplo)",
        "method": "POST",
        "url": "https://api.z-api.io/instances/3DD125DF4D24C0040E1D9A31D728A9CF/token/1C60CA6A6C84B1ACA9C97D24/send-text",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "parametersBody": {
          "values": [
            {
              "name": "phone",
              "valueProvider": "fieldValue",
              "value": "5511996458904"
            },
            {
              "name": "message",
              "valueProvider": "fieldValue",
              "value": "=Porfavor copie e cole a mensagem e coloque o corretor responsável seguindo a regra de distribuição.\n\n- TELEFONE DO CLIENTE: \n- NOME DO CLIENTE: \n- INTERESSE: VENDA\n- CORRETOR RESPONSÁVEL: "
            }
          ]
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        120,
        3340
      ],
      "id": "2edd9686-ac8e-45fe-92f3-efea67fb8751",
      "name": "GERENTE_MESSAGE",
      "credentials": {
        "httpHeaderAuth": {
          "id": "it1d9QWnCuy49HW7",
          "name": "Header Auth account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Code1').last().json.sessionId }}",
        "contextWindowLength": "={{ 100 }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        580,
        2480
      ],
      "id": "a78992c2-c31d-49d7-ba60-a73633039144",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE dados_cliente\nSET pf_cliente = '{{ $fromAI('Value', ``, 'string') }}'\nWHERE nr_telefone = '5511974220220';\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        980,
        3340
      ],
      "id": "2c56582a-d023-40ef-8496-273abb7e6ff7",
      "name": "CLNT_ATT_PREF",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \"pf_cliente\" FROM dados_cliente\nWHERE nr_telefone = '{{ $('If2').item.json.body.phone }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        1120,
        3340
      ],
      "id": "10f5c843-6242-4a95-a4ba-b151f408e2ed",
      "name": "CLNT_PREF",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE dados_cliente\nSET st_cliente = '{{ $fromAI('Value', ``, 'string') }}'\nWHERE nr_telefone = '5511974220220';\n",
        "options": {}
      },
      "type": "n8n-nodes-base.postgresTool",
      "typeVersion": 2.6,
      "position": [
        460,
        3340
      ],
      "id": "a51671f9-e946-41f2-9d16-062ab1a4b654",
      "name": "CLNT_ATT_PREF1",
      "credentials": {
        "postgres": {
          "id": "jVfbi6gkEzUBEvfb",
          "name": "JAPI POSTGRES' ACCOUNT"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "d47b18ac-3bc8-4e68-8905-7399d217d89e",
              "leftValue": "={{ $json.body.isGroup }}",
              "rightValue": "false",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        -4120,
        2980
      ],
      "id": "0971d9e0-7272-4f87-bf14-82700a856126",
      "name": "Filter"
    }
  ],
  "connections": {
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Created": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File Updated": {
      "main": [
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Document Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Deleta linhas antigas do documento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract PDF Text": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Insert into Supabase Vectorstore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into Supabase Vectorstore": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "buscar_documentos",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Excel": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI3": {
      "ai_languageModel": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items3": {
      "main": [
        [],
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OutputParser1": {
      "ai_outputParser": [
        [
          {
            "node": "Parser  Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Parser  Chain": {
      "main": [
        [
          {
            "node": "Split de Mensagem",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Cria Histórico Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If4": {
      "main": [
        [
          {
            "node": "Adiciona CHAT supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualiza CHAT Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListChats-Supabase": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListMessages-Supabase": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "DisableMessage-Supabase": {
      "main": [
        [
          {
            "node": "Loop Over Items2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SetConfig": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Supabase2",
            "type": "main",
            "index": 0
          },
          {
            "node": "SetConfig",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase2": {
      "main": [
        [
          {
            "node": "Wait2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items2": {
      "main": [
        [],
        [
          {
            "node": "ListMessages-Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Wait2": {
      "main": [
        [
          {
            "node": "DisableMessage-Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Busca Telefone": {
      "main": [
        [
          {
            "node": "If4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Adiciona CHAT supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualiza CHAT Supabase": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Cria Histórico Supabase": {
      "main": [
        [
          {
            "node": "Delete Memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Menos que 240 Caracteres": {
      "main": [
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Parser  Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split de Mensagem": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 segundo": {
      "main": [
        [
          {
            "node": "Loop Over Items3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retorna ID do arquivo": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Deleta linhas antigas do documento": {
      "main": [
        [
          {
            "node": "Retorna ID do arquivo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Switch4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If6": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If5": {
      "main": [
        [
          {
            "node": "Edit Fields6",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Edit Fields10",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "buscar_documentos": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "5 Minutos antes": {
      "main": [
        [
          {
            "node": "If8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "2 Hora antes": {
      "main": [
        [
          {
            "node": "If7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If7": {
      "main": [
        [
          {
            "node": "Edit Fields5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If8": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields5": {
      "main": [
        [
          {
            "node": "Supabase3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Supabase4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Atendente2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items4": {
      "main": [
        [],
        [
          {
            "node": "2 Hora antes",
            "type": "main",
            "index": 0
          },
          {
            "node": "5 Minutos antes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Get Dados",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Date & Time1": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File1": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "Convert to File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Redis5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Redis4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis4": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Redis5": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compara Get Memory1": {
      "main": [
        [
          {
            "node": "Mensagem Completa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Text Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Memory1": {
      "main": [
        [
          {
            "node": "Get Memory 1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields8": {
      "main": [
        [
          {
            "node": "Compara Get Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait3": {
      "main": [
        [
          {
            "node": "Get Memory 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 1": {
      "main": [
        [
          {
            "node": "Wait3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Memory 2": {
      "main": [
        [
          {
            "node": "Edit Fields8",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Dados": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Variáveis": {
      "main": [
        [
          {
            "node": "Date & Time1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "dados_para_atendimento_humano1": {
      "main": [
        [
          {
            "node": "Verificar Atendimento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Block": {
      "main": [
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Variáveis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verificar Atendimento": {
      "main": [
        [
          {
            "node": "Switch Block",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mensagem Completa": {
      "main": [
        [
          {
            "node": "LIA SDR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Audio Memory1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Supabase5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListChats-Supabase2": {
      "main": [
        [
          {
            "node": "Loop Over Items6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ListMessages-Supabase2": {
      "main": [
        [
          {
            "node": "Aggregate2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate2": {
      "main": [
        [
          {
            "node": "Code6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code6": {
      "main": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items6": {
      "main": [
        [],
        [
          {
            "node": "ListMessages-Supabase2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [],
        [
          {
            "node": "dados_para_atendimento_humano1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase4": {
      "main": [
        [
          {
            "node": "Atendente2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase3": {
      "main": [
        [
          {
            "node": "Atendente1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase5": {
      "main": [
        [
          {
            "node": "If9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If9": {
      "main": [
        [
          {
            "node": "Get Dados1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Gerar sessionID1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar sessionID1": {
      "main": [
        [
          {
            "node": "Supabase6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase6": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Atendente3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Dados1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch5": {
      "main": [
        [
          {
            "node": "Extract PDF Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Excel",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Document Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch7": {
      "main": [
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Text Memory1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory3": {
      "ai_memory": [
        [
          {
            "node": "Atendente1",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Atendente2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger3": {
      "main": [
        [
          {
            "node": "ListChats-Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model7": {
      "ai_languageModel": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "MARCO",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch4": {
      "main": [
        [
          {
            "node": "If5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields7",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "LIA SDR": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Postgres Chat Memory2": {
      "ai_memory": [
        [
          {
            "node": "Atendente3",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Atendente3",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "1 segundo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch9": {
      "main": [
        [
          {
            "node": "MARCO",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Busca Telefone",
            "type": "main",
            "index": 0
          },
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "MARCO": {
      "main": [
        []
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger1": {
      "main": [
        [
          {
            "node": "Loop Over Items4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Menos que 240 Caracteres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items5": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Loop Over Items5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch6": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Busca GPT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail1": {
      "main": [
        [
          {
            "node": "Switch6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Gmail1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Busca GPT": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CREATE A USER IF DOESN'T EXIST": {
      "main": [
        [
          {
            "node": "UPTADE CHAT HISTORY",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "No Operation, do nothing2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "FLUXO PÓS VENDA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UPTADE STATUS": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "UPTADE CHAT HISTORY": {
      "main": [
        [
          {
            "node": "SEND MESSAGE PÓS VENDA",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRIADOR DE MENSAGEM": {
      "ai_tool": [
        [
          {
            "node": "FLUXO PÓS VENDA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat FLUXO": {
      "ai_languageModel": [
        [
          {
            "node": "FLUXO PÓS VENDA",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "DATA CALCULATOR": {
      "ai_tool": [
        [
          {
            "node": "FLUXO PÓS VENDA",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "SEND MESSAGE PÓS VENDA": {
      "main": [
        [
          {
            "node": "UPTADE STATUS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 MONTH TRIGGER": {
      "main": [
        [
          {
            "node": "1 MONTH",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "6 MONTH TRIGGER": {
      "main": [
        [
          {
            "node": "6 MONTH",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TRIGGER 9H15": {
      "main": [
        [
          {
            "node": "1 YEAR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FLUXO PÓS VENDA": {
      "main": [
        [
          {
            "node": "CREATE A USER IF DOESN'T EXIST",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "FLUXO PÓS VENDA",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Merge Informations": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "1 MONTH": {
      "main": [
        [
          {
            "node": "Merge Informations",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "6 MONTH": {
      "main": [
        [
          {
            "node": "Merge Informations",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "1 YEAR": {
      "main": [
        [
          {
            "node": "Merge Informations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CLNT_STATUS": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "UPT_ACOMPANHAMENTO": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "ATLAS": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CT_C2S": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "MSG_CORRETOR": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "GERENTE_MESSAGE": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "MARCO",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "CLNT_ATT_PREF": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CLNT_PREF": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CLNT_ATT_PREF1": {
      "ai_tool": [
        [
          {
            "node": "LIA SDR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "Webhook": [
      {
        "headers": {
          "host": "primary-production-4539.up.railway.app",
          "user-agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 13_2_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36",
          "content-length": "798",
          "content-type": "application/json",
          "origin": "https://api.z-api.io",
          "server": "Z-API",
          "x-forwarded-for": "146.235.42.234",
          "x-forwarded-host": "primary-production-4539.up.railway.app",
          "x-forwarded-proto": "https",
          "x-railway-edge": "railway/us-east4-eqdc4a",
          "x-railway-request-id": "ry2FP7RiQbe3VR5yaUSguw_186547883",
          "x-real-ip": "146.235.42.234",
          "x-request-start": "1744222242860",
          "z-api-token": "1C60CA6A6C84B1ACA9C97D24",
          "accept-encoding": "gzip"
        },
        "params": {},
        "query": {},
        "body": {
          "isStatusReply": false,
          "chatLid": "54082312097911@lid",
          "connectedPhone": "5511970975155",
          "waitingMessage": false,
          "isEdit": false,
          "isGroup": false,
          "isNewsletter": false,
          "instanceId": "3DD125DF4D24C0040E1D9A31D728A9CF",
          "messageId": "3FA9284B6CE66EE0344E",
          "phone": "5511974220220",
          "fromMe": false,
          "momment": 1744222242536,
          "status": "RECEIVED",
          "chatName": "Eu",
          "senderPhoto": null,
          "senderName": "Rafael Zulpo Mazzali",
          "photo": "https://pps.whatsapp.net/v/t61.24694-24/465380672_417514974736838_3378439117926612914_n.jpg?ccb=11-4&oh=01_Q5AaIU5k_3fnq87AzjxkJCjgr63Np5BAiR2TSYdS3qL-qAYk&oe=6803D689&_nc_sid=5e03e0&_nc_cat=103",
          "broadcast": false,
          "participantLid": null,
          "messageExpirationSeconds": 0,
          "forwarded": false,
          "type": "ReceivedCallback",
          "fromApi": false,
          "text": {
            "message": "tem outras opções com 2 ou + dormitórios"
          }
        },
        "webhookUrl": "https://primary-production-4539.up.railway.app/webhook/liasdr",
        "executionMode": "production"
      }
    ]
  },
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "68c45d34dfa1c83fbb526bfd109ed4fb7589ea110c1bc15af2b9f44ec84a9a08"
  }
}
